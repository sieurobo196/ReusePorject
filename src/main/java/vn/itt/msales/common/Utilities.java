/* * Copyright (C) 2015 The mSales Project * */package vn.itt.msales.common;import java.text.SimpleDateFormat;import java.util.Calendar;import java.util.Date;import org.joda.time.DateTime;import org.joda.time.Period;import org.springframework.ui.Model;/** * * @author vtm036 */public class Utilities {    /**     * Date format     * <p>     * @param format     * @param date     * <p>     * @return     */    public static String dateFormat(String format, Date date) {        SimpleDateFormat sourceDateFormat = new SimpleDateFormat(format);        return sourceDateFormat.format(date);    }    public static SimpleDateFormat dateFormat() {        return new SimpleDateFormat(MsalesConstants.DATE_FORMAT);    }    /**     * Convert long date to String     * <p>     * @param format     * @param time     * <p>     * @return     */    public String getDate(String format, int time) {        Date date = new Date(time);        SimpleDateFormat sourceDateFormat = new SimpleDateFormat(format);        return sourceDateFormat.format(date);    }    /**     *     */    public static String timeDiff(Date startTime, Date endTime) {        DateTime jdStartTime = new DateTime(startTime);        DateTime jdEndTime = new DateTime(endTime);        return timeDiff(jdStartTime, jdEndTime);    }    public static String timeDiff(DateTime jdStartTime, DateTime jdEndTime) {        Period howLong = new Period(jdStartTime, jdEndTime);        return String.format("%02d:%02d:%02d", howLong.getHours(), howLong.getMinutes(), howLong.getSeconds());    }    public static String timeDiff(Calendar startTime, Calendar endTime) {        DateTime jdStartTime = new DateTime(startTime);        DateTime jdEndTime = new DateTime(endTime);        return timeDiff(jdStartTime, jdEndTime);    }    public static PaginationInfo addPaginationToModel(long count, Integer page, Integer size, Model uiModel) {        if (page == null) {            page = 1;        }        PaginationInfo paginationInfo = PaginationUtil.calculatePage(count, page, size);        uiModel.addAttribute("size", paginationInfo.getSize());        uiModel.addAttribute("page", paginationInfo.getPage());        uiModel.addAttribute("maxPages", paginationInfo.getMaxPages());        return paginationInfo;    }}