package vn.itt.msales.entity;
// Generated Jun 11, 2015 10:37:14 AM by Hibernate Tools 4.3.1

import com.fasterxml.jackson.annotation.JsonFilter;
import com.fasterxml.jackson.annotation.JsonIgnore;
import com.fasterxml.jackson.annotation.JsonIgnoreProperties;
import com.fasterxml.jackson.annotation.JsonSetter;
import java.util.Date;
import java.util.Objects;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import javax.persistence.GenerationType;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.SequenceGenerator;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;
import javax.persistence.Transient;
import javax.validation.constraints.NotNull;
import org.hibernate.validator.constraints.NotEmpty;
import org.springframework.format.annotation.NumberFormat;
import vn.itt.msales.common.json.validator.MsalesValidator;

/**
 * Unit generated by hbm2java
 */
@Entity
@Table(name = "`unit`"
)
@JsonFilter("JSONFILTER")
@JsonIgnoreProperties(value = "companys")
public class Unit implements java.io.Serializable {

    private static final long serialVersionUID = -7965828059423634821L;

    @Id
    @GeneratedValue(strategy = GenerationType.AUTO, generator = "SEQ_ID")
    @SequenceGenerator(name = "SEQ_ID", sequenceName = "SEQ_UNIT_ID")
    private Integer id;
    @Column(name = "CODE", nullable = false, length = 100)

    @NotNull(message = "Code không được null")
    @NotEmpty(message = "Code không được rỗng")
    private String code;
    @Column(name = "NAME", nullable = false, unique = true, length = 200)
    @NotNull(message = "Name không được null")
    @NotEmpty(message = "Name không được rỗng")
    private String name;

    @Column(name = "`ORDER`", nullable = true)
    @NumberFormat(style = NumberFormat.Style.NUMBER)
    @NotNull(message = MsalesValidator.UNIT_ORDER_NOT_NULL)
    private Integer order;

    @Temporal(TemporalType.TIMESTAMP)
    @Column(name = "CREATED_AT", nullable = false, length = 19)
    @JsonIgnore
    private Date createdAt;
    @Column(name = "CREATED_USER", nullable = false)
    @NotNull(message = MsalesValidator.CREATED_USER_NULL)
    private Integer createdUser;

    @Temporal(TemporalType.TIMESTAMP)
    @Column(name = "UPDATED_AT", length = 19)
    @JsonIgnore
    private Date updatedAt;

    @Column(name = "UPDATED_USER", nullable = false)
    @NotNull(message = MsalesValidator.UPDATED_USER_NULL)
    private Integer updatedUser;

    @Temporal(TemporalType.TIMESTAMP)
    @Column(name = "DELETED_AT", length = 19)
    @JsonIgnore
    private Date deletedAt;

    @Column(name = "DELETED_USER", nullable = false)
    @NotNull(message = MsalesValidator.DELETED_USER_NULL)
    private Integer deletedUser;

    @Transient
    private Integer companyId;

    @NotNull(message = MsalesValidator.GOODS_CATEGORY_COMPANY_ID_NULL)
    @ManyToOne(fetch = FetchType.EAGER)
    @JoinColumn(name = "COMPANY_ID", nullable = false)
    @JsonIgnoreProperties(value = {"locations", "statuss", "code", "address", "contactPersonName", "tel", "fax",
        "email", "lat", "lng", "logoPath", "note"})
    private Company companys;

    @Column(name = "CHILD_UNIT_ID", nullable = true)
    private Integer childUnit;
    @Column(name = "CHILD_QUANTITY", nullable = true)
    private Integer childQuantity;

    public Unit() {
    }

    public Unit(Integer id, String code, String name, Integer order, Date createdAt, Integer createdUser, Date updatedAt, Integer updatedUser, Date deletedAt, Integer deletedUser, Integer companyId, Company companys, Integer childUnit, Integer childQuantity) {
        this.id = id;
        this.code = code;
        this.name = name;
        this.order = order;
        this.createdAt = createdAt;
        this.createdUser = createdUser;
        this.updatedAt = updatedAt;
        this.updatedUser = updatedUser;
        this.deletedAt = deletedAt;
        this.deletedUser = deletedUser;
        this.companyId = companyId;
        this.companys = companys;
        this.childUnit = childUnit;
        this.childQuantity = childQuantity;
    }

    public Integer getChildUnit() {
        return childUnit;
    }

    public void setChildUnit(Integer childUnit) {
        this.childUnit = childUnit;
    }

    public Integer getChildQuantity() {
        return childQuantity;
    }

    public void setChildQuantity(Integer childQuantity) {
        this.childQuantity = childQuantity;
    }

    public Integer getId() {
        return this.id;
    }

    public void setId(Integer id) {
        this.id = id;
    }

    public String getCode() {
        return this.code;
    }

    public void setCode(String code) {
        this.code = code;
    }

    public String getName() {
        return this.name;
    }

    public void setName(String name) {
        this.name = name;
    }

    public Date getCreatedAt() {
        return this.createdAt;
    }

    public void setCreatedAt(Date createdAt) {
        this.createdAt = createdAt;
    }

    @JsonIgnore
    public Integer getCreatedUser() {
        return this.createdUser;
    }

    @JsonSetter
    public void setCreatedUser(Integer createdUser) {
        this.createdUser = createdUser;
    }

    public Date getUpdatedAt() {
        return this.updatedAt;
    }

    public void setUpdatedAt(Date updatedAt) {
        this.updatedAt = updatedAt;
    }

    @JsonIgnore
    public Integer getUpdatedUser() {
        return this.updatedUser;
    }

    @JsonSetter
    public void setUpdatedUser(Integer updatedUser) {
        this.updatedUser = updatedUser;
    }

    public Date getDeletedAt() {
        return this.deletedAt;
    }

    public void setDeletedAt(Date deletedAt) {
        this.deletedAt = deletedAt;
    }

    @JsonIgnore
    public Integer getDeletedUser() {
        return this.deletedUser;
    }

    @JsonSetter
    public void setDeletedUser(Integer deletedUser) {
        this.deletedUser = deletedUser;
    }

    @JsonIgnore
    public Integer getCompanyId() {
        return companyId;
    }

    @JsonSetter
    public void setCompanyId(Integer companyId) {
        this.companyId = companyId;
        if (companyId != null) {
            Company company = new Company();
            company.setId(this.companyId);
            this.companys = company;
        }
    }

    public Company getCompanys() {
        return companys;
    }

    public void setCompanys(Company companys) {
        this.companys = companys;
    }

    public Integer getOrder() {
        return order;
    }

    public void setOrder(Integer order) {
        this.order = order;
    }

    @Override
    public boolean equals(Object obj) {
        return this.getCode().equalsIgnoreCase(((Unit) obj).getCode());
    }

    @Override
    public int hashCode() {
        int hash = 7;
        hash = 79 * hash + Objects.hashCode(this.code);
        return hash;
    }
}
