package vn.itt.msales.entity;

// Generated Jun 11, 2015 10:37:14 AM by Hibernate Tools 4.3.1
import java.util.Date;

import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.GeneratedValue;
import javax.persistence.FetchType;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;
import javax.persistence.Transient;
import javax.validation.constraints.NotNull;

import org.springframework.format.annotation.NumberFormat;

import vn.itt.msales.common.json.validator.MsalesValidator;

import com.fasterxml.jackson.annotation.JsonFilter;
import com.fasterxml.jackson.annotation.JsonFormat;
import com.fasterxml.jackson.annotation.JsonIgnore;
import com.fasterxml.jackson.annotation.JsonIgnoreProperties;
import com.fasterxml.jackson.annotation.JsonSetter;
import com.fasterxml.jackson.databind.annotation.JsonSerialize;

import javax.persistence.GenerationType;
import javax.persistence.SequenceGenerator;

/**
 * ChannelLocation generated by hbm2java
 */
/**
 *
 * @author DuanND
 *
 */
@Entity
@Table(name = "`channel_location`")
@JsonFilter("JSONFILTER")
@JsonSerialize(include=JsonSerialize.Inclusion.NON_NULL)
public class ChannelLocation implements java.io.Serializable {

    private static final long serialVersionUID = 3776227802571708520L;

    @Id
    @GeneratedValue(strategy = GenerationType.AUTO, generator = "SEQ_ID")
    @SequenceGenerator(name = "SEQ_ID", sequenceName = "SEQ_CHANNELLOCATION_ID")
    @Column(name = "ID", unique = true, nullable = false)
    private Integer id;
    
    @Transient
    @NumberFormat(style = NumberFormat.Style.NUMBER)
    private Integer locationId;
    
    @Transient
    @NumberFormat(style = NumberFormat.Style.NUMBER)
    private Integer channelId;
    
    @Temporal(TemporalType.TIMESTAMP)
    @Column(name = "CREATED_AT", nullable = false, length = 19)
    @JsonFormat(shape = JsonFormat.Shape.STRING, pattern = MsalesValidator.DATE_FORMAT_LONG, timezone = "GMT+7")
    private Date createdAt;
    
    @Column(name = "CREATED_USER", nullable = false)
    @NumberFormat(style = NumberFormat.Style.NUMBER)
    @NotNull(message = MsalesValidator.CREATED_USER_NULL)
    private Integer createdUser;

    @Temporal(TemporalType.TIMESTAMP)
    @Column(name = "UPDATED_AT", length = 19)
    @JsonIgnore
    @JsonFormat(shape = JsonFormat.Shape.STRING, pattern = MsalesValidator.DATE_FORMAT_LONG, timezone = "GMT+7")
    private Date updatedAt;

    @Column(name = "UPDATED_USER", nullable = false)
    @NotNull(message = MsalesValidator.UPDATED_USER_NULL)
    private Integer updatedUser;

    @Temporal(TemporalType.TIMESTAMP)
    @Column(name = "DELETED_AT", length = 19)
    @JsonIgnore
    @JsonFormat(shape = JsonFormat.Shape.STRING, pattern = MsalesValidator.DATE_FORMAT_LONG, timezone = "GMT+7")
    private Date deletedAt;

    @Column(name = "DELETED_USER", nullable = false)
    @NotNull(message = MsalesValidator.DELETED_USER_NULL)
    private Integer deletedUser;

    @ManyToOne(fetch = FetchType.EAGER)
    @JoinColumn(name = "LOCATION_ID", nullable = false)
    @NotNull(message = MsalesValidator.CHANNEL_LOCATION_LOCATION_ID_NULL)
    private Location locations;

    @JsonIgnoreProperties(value = {"code", "note", "lat",
        "lng", "parents"})
    public Location getLocations() {
        return locations;
    }

    public void setLocations(Location locations) {
        this.locations = locations;
    }

    @ManyToOne(fetch = FetchType.EAGER)
    @JoinColumn(name = "CHANNEL_ID", nullable = false)
    @NotNull(message = MsalesValidator.CHANNEL_LOCATION_CHANNEL_ID_NULL)
    private Channel channels;

    @JsonIgnoreProperties(value = {"locations", "statuss", "parents", "companys",
        "statusType", "channelTypes", "code", "channelTypeId",
        "isSalePoint", "address", "contactPersonName", "tel", "fax",
        "email", "lat", "lng", "note"})
    public Channel getChannels() {
        return channels;
    }

    public void setChannels(Channel channel) {
        this.channels = channel;
    }

    public ChannelLocation() {
    }

    public ChannelLocation(Integer locationId, Integer channelId,
            Date createdAt, Integer createdUser, Date updatedAt,
            Integer updatedUser, Date deletedAt, Integer deletedUser) {
        this.locationId = locationId;
        this.channelId = channelId;
        this.createdAt = createdAt;
        this.createdUser = createdUser;
        this.updatedAt = updatedAt;
        this.updatedUser = updatedUser;
        this.deletedAt = deletedAt;
        this.deletedUser = deletedUser;
    }

    public ChannelLocation(Integer locationId, Integer channelId, Integer createdUser) {
        this.locationId = locationId;
        this.channelId = channelId;
        this.createdUser = createdUser;
    }

    public Integer getId() {
        return this.id;
    }

    public void setId(Integer id) {
        this.id = id;
    }

    // @Column(name="LOCATION_ID", nullable=false)
    @JsonIgnore
    public Integer getLocationId() {
        return this.locationId;
    }

    @JsonSetter
    public void setLocationId(Integer locationId) {
        this.locationId = locationId;
        Location location = new Location();
        location.setId(this.getLocationId());
        this.setLocations(location);
    }

    // @Column(name="CHANNEL_ID", nullable=false)
    @JsonIgnore
    public Integer getChannelId() {
        return this.channelId;
    }

    @JsonSetter
    public void setChannelId(Integer channelId) {
        this.channelId = channelId;
        Channel channel = new Channel();
        channel.setId(this.getChannelId());
        this.setChannels(channel);
    }

    @JsonIgnore
    public Date getCreatedAt() {
        return this.createdAt;
    }

    @JsonSetter
    public void setCreatedAt(Date createdAt) {
        this.createdAt = createdAt;
    }

    @JsonIgnore
    public Integer getCreatedUser() {
        return this.createdUser;
    }

    @JsonSetter
    public void setCreatedUser(Integer createdUser) {
        this.createdUser = createdUser;
    }

    @JsonIgnore
    public Date getUpdatedAt() {
        return this.updatedAt;
    }

    @JsonSetter
    public void setUpdatedAt(Date updatedAt) {
        this.updatedAt = updatedAt;
    }

    @JsonIgnore
    public Integer getUpdatedUser() {
        return this.updatedUser;
    }

    @JsonSetter
    public void setUpdatedUser(Integer updatedUser) {
        this.updatedUser = updatedUser;
    }

    @JsonIgnore
    public Date getDeletedAt() {
        return this.deletedAt;
    }

    public void setDeletedAt(Date deletedAt) {
        this.deletedAt = deletedAt;
    }

    @JsonIgnore
    public Integer getDeletedUser() {
        return this.deletedUser;
    }

    @JsonSetter
    public void setDeletedUser(Integer deletedUser) {
        this.deletedUser = deletedUser;
    }
}
