package vn.itt.msales.entity;
// Generated Jul 13, 2015 9:39:39 AM by Hibernate Tools 4.3.1

import com.fasterxml.jackson.annotation.JsonFilter;
import com.fasterxml.jackson.annotation.JsonFormat;
import com.fasterxml.jackson.annotation.JsonIgnore;
import com.fasterxml.jackson.annotation.JsonIgnoreProperties;
import com.fasterxml.jackson.annotation.JsonSetter;
import com.fasterxml.jackson.databind.annotation.JsonSerialize;
import java.util.Date;
import java.util.List;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import javax.persistence.GenerationType;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.SequenceGenerator;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;
import javax.persistence.Transient;
import javax.validation.constraints.NotNull;

import vn.itt.msales.common.json.validator.MsalesValidator;

/**
 * UserGoodsCategory generated by hbm2java
 */
@Entity
@Table(name = "`user_goods_category`"
)
@JsonFilter("JSONFILTER")
@JsonSerialize(include=JsonSerialize.Inclusion.NON_NULL)
public class UserGoodsCategory implements java.io.Serializable {

    private static final long serialVersionUID = 4228872269281391508L;

    @Id
    @Column(name = "ID", unique = true, nullable = false)
    @GeneratedValue(strategy=GenerationType.AUTO ,generator = "SEQ_ID")
    @SequenceGenerator(name = "SEQ_ID",sequenceName = "SEQ_USERGOODSCATEGORY_ID")
    private Integer id;

    @Transient
    private GoodsCategory goodsCategory;
    @JsonIgnoreProperties(value = { "order"})
    public GoodsCategory getGoodsCategory() {
		return goodsCategory;
	}

	public void setGoodsCategory(GoodsCategory goodsCategory) {
		this.goodsCategory = goodsCategory;
	}

	@JsonFormat(pattern = "dd/MM/yyyy HH:mm:ss", shape = JsonFormat.Shape.STRING, timezone = "GMT+7")
    @Temporal(TemporalType.TIMESTAMP)
    @Column(name = "BEGIN_AT", length = 19)
    private Date beginAt;

    @JsonFormat(pattern = "dd/MM/yyyy HH:mm:ss", shape = JsonFormat.Shape.STRING, timezone = "GMT+7")
    @Temporal(TemporalType.TIMESTAMP)
    @Column(name = "END_AT", length = 19)
    private Date endAt;    

    @Temporal(TemporalType.TIMESTAMP)
    @Column(name = "CREATED_AT", nullable = false, length = 19)
    @JsonIgnore
    private Date createdAt;

    @Column(name = "CREATED_USER", nullable = false)
    @NotNull(message = MsalesValidator.CREATED_USER_NULL)
    private Integer createdUser;
    
    @Temporal(TemporalType.TIMESTAMP)
    @Column(name = "UPDATED_AT", length = 19)
    @JsonIgnore
    private Date updatedAt;

    @Column(name = "UPDATED_USER", nullable = false)
    @NotNull(message = MsalesValidator.UPDATED_USER_NULL)
    private Integer updatedUser;

    @Temporal(TemporalType.TIMESTAMP)
    @Column(name = "DELETED_AT", length = 19)
    @JsonIgnore
    private Date deletedAt;

    @Column(name = "DELETED_USER", nullable = false)
    @NotNull(message = MsalesValidator.DELETED_USER_NULL)
    private Integer deletedUser;

    @Transient
    private Integer userId;

    @Transient
    private Integer goodsCategoryId;
    
    @Transient
    private Integer statusId;
    
    @NotNull(message = MsalesValidator.USER_GOODS_CATEGORY_USER_ID_NULL)
    @ManyToOne(fetch = FetchType.EAGER)
    @JoinColumn(name = "USER_ID", nullable = false)
    @JsonIgnoreProperties(value = {"username", "userCode", "birthday", "sex", "email", "yahooId", "skypeId", "isdn",
        "tel", "address", "note", "isActive", "activeCode", "employerType", "useEvoucher", "ipLastLogin", "statusId",
        "updatedAt", "updatedUser", "locations", "imployerUser", "monitoringUser", "monitoringUsers", "employerUsers", "createdUser","companys"})
    private User users;

    public User getUsers() {
        return users;
    }

    public void setUsers(User users) {
        this.users = users;
    }

    @NotNull(message = MsalesValidator.USER_GOODS_CATEGORY_GOODS_CATEGORY_ID_NULL)
    @ManyToOne(fetch = FetchType.EAGER)
    @JoinColumn(name = "GOODS_CATEGORY_ID", nullable = false)
    @JsonIgnoreProperties(value = {"order","companys"})
    private GoodsCategory goodsCategorys;

    public GoodsCategory getGoodsCategorys() {
        return goodsCategorys;
    }

    public void setGoodsCategorys(GoodsCategory goodsCategorys) {
        this.goodsCategorys = goodsCategorys;
    }
    
    
    @NotNull(message = MsalesValidator.USER_GOODS_CATEGORY_STATUS_ID_NULL)
    @ManyToOne(fetch = FetchType.EAGER)
    @JoinColumn(name = "STATUS_ID", nullable = false)
    @JsonIgnoreProperties(value = {"value","statusTypes"})
    private Status statuss;

    public Status getStatuss() {
        return statuss;
    }

    public void setStatuss(Status statuss) {
        this.statuss = statuss;
    }
    
    @Transient
    private List<Goods> goods;
    
    @JsonIgnoreProperties(value = {"goodsCategorys", "quantity", "price"})
    public List<Goods> getGoods() {
		return goods;
	}

	public void setGoods(List<Goods> goods) {
		this.goods = goods;
	}
	
	@Transient
	private List<UserGoodsCategory> stockGoods;

	@JsonIgnoreProperties(value = {"id", "beginAt", "endAt"})
	public List<UserGoodsCategory> getStockGoods() {
		return stockGoods;
	}

	public void setStockGoods(List<UserGoodsCategory> stockGoods) {
		this.stockGoods = stockGoods;
	}

	public UserGoodsCategory() {
    }

    public UserGoodsCategory(Integer id, Integer userId, Integer goodsCategoryId, Integer statusId, Date createdAt, Integer createdUser, Date updatedAt, Integer updatedUser, Date deletedAt, Integer deletedUser) {
        this.id = id;
        this.userId = userId;
        this.goodsCategoryId = goodsCategoryId;
        this.statusId = statusId;
        this.createdAt = createdAt;
        this.createdUser = createdUser;
        this.updatedAt = updatedAt;
        this.updatedUser = updatedUser;
        this.deletedAt = deletedAt;
        this.deletedUser = deletedUser;
    }

    public UserGoodsCategory(Integer id, Integer userId, Integer goodsCategoryId, Date beginAt, Date endAt, Integer statusId, Date createdAt, Integer createdUser, Date updatedAt, Integer updatedUser, Date deletedAt, Integer deletedUser) {
        this.id = id;
        this.userId = userId;
        this.goodsCategoryId = goodsCategoryId;
        this.beginAt = beginAt;
        this.endAt = endAt;
        this.statusId = statusId;
        this.createdAt = createdAt;
        this.createdUser = createdUser;
        this.updatedAt = updatedAt;
        this.updatedUser = updatedUser;
        this.deletedAt = deletedAt;
        this.deletedUser = deletedUser;
    }

    public Integer getId() {
        return this.id;
    }

    public void setId(Integer id) {
        this.id = id;
    }

    @JsonIgnore
    public Integer getUserId() {
        return this.userId;
    }

    @JsonSetter
    public void setUserId(Integer userId) {
        this.userId = userId;
        if(userId!=null)
        {
            User user = new User();
            user.setId(this.getUserId());
            this.users = user;
        }
    }

    @JsonIgnore
    public Integer getGoodsCategoryId() {
        return this.goodsCategoryId;
    }

    @JsonSetter
    public void setGoodsCategoryId(Integer goodsCategoryId) {
        this.goodsCategoryId = goodsCategoryId;
        if(goodsCategoryId!=null)
        {
            GoodsCategory goodsCategory = new GoodsCategory();
            goodsCategory.setId(this.getGoodsCategoryId());
            this.goodsCategorys = goodsCategory;
        }
    }

    public Date getBeginAt() {
        return this.beginAt;
    }

    public void setBeginAt(Date beginAt) {
        this.beginAt = beginAt;
    }

    public Date getEndAt() {
        return this.endAt;
    }

    public void setEndAt(Date endAt) {
        this.endAt = endAt;
    }

    @JsonIgnore
    public Integer getStatusId() {
        return this.statusId;
    }

    @JsonSetter
    public void setStatusId(Integer statusId) {
        this.statusId = statusId;
        if(statusId!=null)
        {
            Status status = new Status();
            status.setId(this.getStatusId());
            this.statuss = status;
        }
    }

    public Date getCreatedAt() {
        return this.createdAt;
    }

    public void setCreatedAt(Date createdAt) {
        this.createdAt = createdAt;
    }

    @JsonIgnore
    public Integer getCreatedUser() {
        return this.createdUser;
    }

    @JsonSetter
    public void setCreatedUser(Integer createdUser) {
        this.createdUser = createdUser;
    }

    public Date getUpdatedAt() {
        return this.updatedAt;
    }

    public void setUpdatedAt(Date updatedAt) {
        this.updatedAt = updatedAt;
    }

    @JsonIgnore
    public Integer getUpdatedUser() {
        return this.updatedUser;
    }

    @JsonSetter
    public void setUpdatedUser(Integer updatedUser) {
        this.updatedUser = updatedUser;
    }

    public Date getDeletedAt() {
        return this.deletedAt;
    }

    public void setDeletedAt(Date deletedAt) {
        this.deletedAt = deletedAt;
    }

    @JsonIgnore
    public Integer getDeletedUser() {
        return this.deletedUser;
    }

    @JsonSetter
    public void setDeletedUser(Integer deletedUser) {
        this.deletedUser = deletedUser;
    }

}
