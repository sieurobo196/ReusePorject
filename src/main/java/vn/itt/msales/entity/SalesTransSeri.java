package vn.itt.msales.entity;
// Generated Jun 22, 2015 9:37:59 AM by Hibernate Tools 4.3.1

import com.fasterxml.jackson.annotation.JsonFormat;
import com.fasterxml.jackson.annotation.JsonIgnore;
import com.fasterxml.jackson.annotation.JsonSetter;
import java.util.Date;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import javax.persistence.GenerationType;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.SequenceGenerator;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;
import javax.persistence.Transient;
import javax.validation.constraints.NotNull;
import org.hibernate.validator.constraints.NotEmpty;
import vn.itt.msales.common.json.validator.MsalesValidator;

/**
 * SalesTransSeri generated by hbm2java
 */
@Entity
@Table(name = "`sales_trans_seri`"
)
public class SalesTransSeri implements java.io.Serializable {

    private static final long serialVersionUID = 6032621753732923743L;

    @Id
    @GeneratedValue(strategy = GenerationType.AUTO, generator = "SEQ_ID")
    @SequenceGenerator(name = "SEQ_ID", sequenceName = "SEQ_SALESTRANSSERI_ID")
    @Column(name = "ID", unique = true, nullable = false)
    private Integer id;

    @NotNull(message = MsalesValidator.SALES_TRANS_SERI_SALES_TRANS_DATE_NULL)
    @JsonFormat(pattern = "dd/MM/yyyy HH:mm:ss", shape = JsonFormat.Shape.STRING, timezone = "GMT+7")
    @Temporal(TemporalType.TIMESTAMP)
    @Column(name = "SALES_TRANS_DATE", nullable = false, length = 19)
    private Date salesTransDate;

    @NotNull(message = MsalesValidator.SALES_TRANS_SERI_QUANTITY_NULL)
    @Column(name = "QUANTITY", nullable = false)
    private Integer quantity;

    @NotNull(message = MsalesValidator.SALES_TRANS_SERI_FROM_SERIAL_NULL)
    @NotEmpty(message = MsalesValidator.SALES_TRANS_SERI_FROM_SERIAL_EMPTY)
    @Column(name = "FROM_SERIAL", nullable = false, length = 100)
    private String fromSerial;

    @NotNull(message = MsalesValidator.SALES_TRANS_SERI_TO_SERIAL_NULL)
    @NotEmpty(message = MsalesValidator.SALES_TRANS_SERI_TO_SERIAL_EMPTY)
    @Column(name = "TO_SERIAL", nullable = false, length = 100)
    private String toSerial;

    @Temporal(TemporalType.TIMESTAMP)
    @Column(name = "CREATED_AT", nullable = false, length = 19)
    @JsonIgnore
    private Date createdAt;

    @Column(name = "CREATED_USER", nullable = false)
    @NotNull(message = MsalesValidator.CREATED_USER_NULL)
    private Integer createdUser;
    
    @Temporal(TemporalType.TIMESTAMP)
    @Column(name = "UPDATED_AT", length = 19)
    @JsonIgnore
    private Date updatedAt;

    @Column(name = "UPDATED_USER", nullable = false)
    @NotNull(message = MsalesValidator.UPDATED_USER_NULL)
    private Integer updatedUser;

    @Temporal(TemporalType.TIMESTAMP)
    @Column(name = "DELETED_AT", length = 19)
    @JsonIgnore
    private Date deletedAt;

    @Column(name = "DELETED_USER", nullable = false)
    @NotNull(message = MsalesValidator.DELETED_USER_NULL)
    private Integer deletedUser;

    @Transient
    private Integer salesTransDetailsId;

//@JsonIgnoreProperties({"salesTransDate","quantity","price","isFocus","goods","goodsUnit","salesTrans"})
    @NotNull(message = MsalesValidator.SALES_TRANS_SERI_SALES_TRANS_DETAILS_ID_NULL)
    @ManyToOne(fetch = FetchType.EAGER)
    @JoinColumn(name = "SALES_TRANS_DETAILS_ID", nullable = false)
    private SalesTransDetails salesTransDetailss;

    @JsonIgnore
    public SalesTransDetails getSalesTransDetailss() {
        return salesTransDetailss;
    }

    public void setSalesTransDetailss(SalesTransDetails salesTransDetailss) {
        this.salesTransDetailss = salesTransDetailss;
    }

    public SalesTransSeri() {
    }

    public SalesTransSeri(int salesTransDetailsId, Date salesTransDate, Integer quantity, String fromSerial, String toSerial, Date createdAt, Integer createdUser, Date updatedAt, Integer updatedUser, Date deletedAt, Integer deletedUser) {
        this.salesTransDetailsId = salesTransDetailsId;
        this.salesTransDate = salesTransDate;
        this.quantity = quantity;
        this.fromSerial = fromSerial;
        this.toSerial = toSerial;
        this.createdAt = createdAt;
        this.createdUser = createdUser;
        this.updatedAt = updatedAt;
        this.updatedUser = updatedUser;
        this.deletedAt = deletedAt;
        this.deletedUser = deletedUser;
    }

    public Integer getId() {
        return this.id;
    }

    public void setId(Integer id) {
        this.id = id;
    }

    @JsonIgnore
    public Integer getSalesTransDetailsId() {
        return this.salesTransDetailsId;
    }

    @JsonSetter
    public void setSalesTransDetailsId(Integer salesTransDetailsId) {
        this.salesTransDetailsId = salesTransDetailsId;
        if (salesTransDetailsId != null) {
            SalesTransDetails salesTransDetails = new SalesTransDetails();
            salesTransDetails.setId(this.salesTransDetailsId);
            this.salesTransDetailss = salesTransDetails;
        }
    }

    public Date getSalesTransDate() {
        return this.salesTransDate;
    }

    public void setSalesTransDate(Date salesTransDate) {
        this.salesTransDate = salesTransDate;
    }

    public Integer getQuantity() {
        return this.quantity;
    }

    public void setQuantity(int quantity) {
        this.quantity = quantity;
    }

    public String getFromSerial() {
        return this.fromSerial;
    }

    public void setFromSerial(String fromSerial) {
        this.fromSerial = fromSerial;
    }

    public String getToSerial() {
        return this.toSerial;
    }

    public void setToSerial(String toSerial) {
        this.toSerial = toSerial;
    }

    public Date getCreatedAt() {
        return this.createdAt;
    }

    public void setCreatedAt(Date createdAt) {
        this.createdAt = createdAt;
    }

    @JsonIgnore
    public Integer getCreatedUser() {
        return this.createdUser;
    }

    @JsonSetter
    public void setCreatedUser(int createdUser) {
        this.createdUser = createdUser;
    }

    public Date getUpdatedAt() {
        return this.updatedAt;
    }

    public void setUpdatedAt(Date updatedAt) {
        this.updatedAt = updatedAt;
    }

    @JsonIgnore
    public Integer getUpdatedUser() {
        return this.updatedUser;
    }

    @JsonSetter
    public void setUpdatedUser(int updatedUser) {
        this.updatedUser = updatedUser;
    }

    public Date getDeletedAt() {
        return this.deletedAt;
    }

    public void setDeletedAt(Date deletedAt) {
        this.deletedAt = deletedAt;
    }

    @JsonIgnore
    public Integer getDeletedUser() {
        return this.deletedUser;
    }

    @JsonSetter
    public void setDeletedUser(int deletedUser) {
        this.deletedUser = deletedUser;
    }

}
