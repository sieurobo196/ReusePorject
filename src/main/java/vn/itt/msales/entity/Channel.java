package vn.itt.msales.entity;
// Generated Jun 11, 2015 10:37:14 AM by Hibernate Tools 4.3.1

import com.fasterxml.jackson.annotation.JsonFilter;
import com.fasterxml.jackson.annotation.JsonGetter;
import com.fasterxml.jackson.annotation.JsonIgnore;
import com.fasterxml.jackson.annotation.JsonIgnoreProperties;
import com.fasterxml.jackson.annotation.JsonSetter;
import com.fasterxml.jackson.databind.annotation.JsonSerialize;
import java.math.BigDecimal;
import java.util.Date;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import javax.persistence.GenerationType;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.SequenceGenerator;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;
import javax.persistence.Transient;
import javax.validation.constraints.NotNull;
import javax.validation.constraints.Pattern;
import org.hibernate.validator.constraints.NotEmpty;
import vn.itt.msales.common.json.validator.MsalesValidator;

/**
 * Channel generated by hbm2java
 */
@Entity
@Table(name = "`channel`"
)
@JsonSerialize(include=JsonSerialize.Inclusion.NON_NULL)
@JsonFilter("JSONFILTER")
public class Channel implements java.io.Serializable {

    private static final long serialVersionUID = -2313522855963902202L;

    @Id
    @GeneratedValue(strategy=GenerationType.AUTO ,generator = "SEQ_ID")
    @SequenceGenerator(name = "SEQ_ID",sequenceName = "SEQ_CHANNEL_ID")
    private Integer id;

    @NotNull(message = MsalesValidator.CHANNEL_FULL_CODE_NULL)
    @NotEmpty(message = MsalesValidator.CHANNEL_FULL_CODE_EMPTY)
    @Column(name = "FULL_CODE", nullable = false, length = 256)
    private String fullCode;
    
    @NotNull(message = MsalesValidator.CHANNEL_CODE_NULL)
    @NotEmpty(message = MsalesValidator.CHANNEL_CODE_EMPTY)
    @Column(name = "CODE", nullable = false, length = 100)
    private String code;

    @NotNull(message = MsalesValidator.CHANNEL_IS_SALE_POINT_NULL)
    @Column(name = "IS_SALE_POINT", nullable = false)
    private Integer isSalePoint;

    @NotNull(message = MsalesValidator.CHANNEL_NAME_NULL)
    @NotEmpty(message = MsalesValidator.CHANNEL_NAME_EMPTY)
    @Column(name = "NAME", nullable = false, length = 100)
    private String name;

    @Column(name = "ADDRESS", length = 1024)
    private String address;
    @Column(name = "CONTACT_PERSON_NAME", length = 100)
    private String contactPersonName;
    
    @Pattern(regexp = MsalesValidator.PHONE_NUMBER,message = MsalesValidator.CHANNEL_TEL_INVALID )
    @Column(name = "TEL", length = 50)
    private String tel;
    
    @Pattern(regexp = MsalesValidator.PHONE_NUMBER,message = MsalesValidator.CHANNEL_FAX_INVALID)
    @Column(name = "FAX", length = 50)
    private String fax;
    
    @Pattern(regexp = MsalesValidator.EMAIL_PATTERN,message = MsalesValidator.CHANNEL_EMAIL_INVALID)
    @Column(name = "EMAIL", length = 100)
    private String email;    
    
    @Column(name = "LAT", precision = 24, scale = 15)
    private BigDecimal lat;
    @Column(name = "LNG", precision = 24, scale = 15)
    private BigDecimal lng;
    @Column(name = "NOTE", length = 1024)
    private String note;

    @Temporal(TemporalType.TIMESTAMP)
    @Column(name = "CREATED_AT", nullable = false, length = 19)
    @JsonIgnore
    private Date createdAt;

    @Column(name = "CREATED_USER", nullable = false)
    @NotNull(message = MsalesValidator.CREATED_USER_NULL)
    private Integer createdUser;
    
    @Temporal(TemporalType.TIMESTAMP)
    @Column(name = "UPDATED_AT", length = 19)
    @JsonIgnore
    private Date updatedAt;

    @Column(name = "UPDATED_USER", nullable = false)
    @NotNull(message = MsalesValidator.UPDATED_USER_NULL)
    private Integer updatedUser;
    
    @Temporal(TemporalType.TIMESTAMP)
    @Column(name = "DELETED_AT", length = 19)
    @JsonIgnore
    private Date deletedAt;

    @Column(name = "DELETED_USER", nullable = false)
    @NotNull(message = MsalesValidator.DELETED_USER_NULL)
    private Integer deletedUser;
    
    
    @Transient
    private Integer companyId;

    @Transient
    private Integer parentId;

    @Transient
    private Integer channelTypeId;

    @Transient
    private Integer statusId;

    //more info
    @NotNull(message = MsalesValidator.CHANNEL_COMPANY_ID_NULL)
    @ManyToOne(fetch = FetchType.EAGER)
    @JoinColumn(name = "COMPANY_ID", nullable = false)
    @JsonIgnoreProperties(value = {"locations", "statuss", "code", "address", "contactPersonName", "tel", "fax",
        "email", "lat", "lng", "logoPath", "note"})
    private Company companys;

    public Company getCompanys() {
        return companys;
    }

    public void setCompanys(Company companys) {
        this.companys = companys;
    }

    @ManyToOne(fetch = FetchType.EAGER)
    @JoinColumn(name = "PARENT_ID", nullable = true)
    @JsonIgnoreProperties(value = {"parents", "companys", "statuss", "channelTypes", "code",
        "isSalePoint", "address", "contactPersonName", "tel", "fax", "email", "lat", "lng", "note"})
    private Channel parents;

    @JsonGetter
    public Channel getParents() {
        return this.parents;
    }

    public void setParents(Channel parents) {
        this.parents = parents;
    }

    @NotNull(message = MsalesValidator.CHANNEL_CHANNELTYPE_ID_NULL)
    @ManyToOne(fetch = FetchType.EAGER)
    @JoinColumn(name = "CHANNEL_TYPE_ID", nullable = false)
    @JsonIgnoreProperties(value = {"parents", "code", "note"})
    private ChannelType channelTypes;

    public ChannelType getChannelTypes() {
        return channelTypes;
    }

    public void setChannelTypes(ChannelType channelTypes) {
        this.channelTypes = channelTypes;
    }

    @NotNull(message = MsalesValidator.CHANNEL_STATUS_ID_NULL)
    @ManyToOne(fetch = FetchType.EAGER)
    @JoinColumn(name = "STATUS_ID", nullable = false)
    @JsonIgnoreProperties(value = {"statusTypes", "value"})
    private Status statuss;

    public Status getStatuss() {
        return statuss;
    }

    public void setStatuss(Status statuss) {
        this.statuss = statuss;
    }

    @Transient
    private String channelName;

    public String getChannelName() {
        return channelName;
    }

    public void setChannelName(String channelName) {
        this.channelName = channelName;
    }
    
    
    public Channel() {
    }

    public Channel(String code, Integer companyId, Integer parentId, Integer channelTypeId, Integer isSalePoint, String name, Integer statusId, Date createdAt, Integer createdUser, Date updatedAt, Integer updatedUser, Date deletedAt, Integer deletedUser) {
        this.code = code;
        this.companyId = companyId;
        this.parentId = parentId;
        this.channelTypeId = channelTypeId;
        this.isSalePoint = isSalePoint;
        this.name = name;
        this.statusId = statusId;
        this.createdAt = createdAt;
        this.createdUser = createdUser;
        this.updatedAt = updatedAt;
        this.updatedUser = updatedUser;
        this.deletedAt = deletedAt;
        this.deletedUser = deletedUser;
    }

    public Channel(String code, Integer companyId, Integer parentId, Integer channelTypeId, Integer isSalePoint, String name, Integer statusId, String address, String contactPersonName, String tel, String fax, String email, BigDecimal lat, BigDecimal lng, String note, Date createdAt, Integer createdUser, Date updatedAt, Integer updatedUser, Date deletedAt, Integer deletedUser) {
        this.code = code;
        this.companyId = companyId;
        this.parentId = parentId;
        this.channelTypeId = channelTypeId;
        this.isSalePoint = isSalePoint;
        this.name = name;
        this.statusId = statusId;
        this.address = address;
        this.contactPersonName = contactPersonName;
        this.tel = tel;
        this.fax = fax;
        this.email = email;
        this.lat = lat;
        this.lng = lng;
        this.note = note;
        this.createdAt = createdAt;
        this.createdUser = createdUser;
        this.updatedAt = updatedAt;
        this.updatedUser = updatedUser;
        this.deletedAt = deletedAt;
        this.deletedUser = deletedUser;
    }

    public Integer getId() {
        return this.id;
    }

    public void setId(Integer id) {
        this.id = id;
    }

    public String getCode() {
        return this.code;
    }

    public void setCode(String code) {
        this.code = code;
    }

    @JsonIgnore
    public Integer getCompanyId() {
        return this.companyId;
    }

    @JsonSetter
    public void setCompanyId(Integer companyId) {
        this.companyId = companyId;
        if (companyId != null) {
            Company company = new Company();
            company.setId(this.companyId);
            this.companys = company;
        }

    }

    @JsonIgnore
    public Integer getParentId() {
        return this.parentId;
    }

    @JsonSetter
    public void setParentId(Integer parentId) {
        this.parentId = parentId;
        if (this.parentId != null) {
            Channel channel = new Channel();
            channel.setId(this.parentId);
            this.parents = channel;
        }
    }

    @JsonIgnore
    public Integer getChannelTypeId() {
        return this.channelTypeId;
    }

    @JsonSetter
    public void setChannelTypeId(Integer channelTypeId) {
        this.channelTypeId = channelTypeId;
        if (channelTypeId != null) {
            ChannelType channelType = new ChannelType();
            channelType.setId(this.channelTypeId);
            this.channelTypes = channelType;
        }

    }

    public Integer getIsSalePoint() {
        return this.isSalePoint;
    }

    public void setIsSalePoint(int isSalePoint) {
        this.isSalePoint = isSalePoint;
    }

    public String getName() {
        return this.name;
    }

    public void setName(String name) {
        this.name = name;
    }

    @JsonIgnore
    public Integer getStatusId() {
        return this.statusId;
    }

    @JsonSetter
    public void setStatusId(Integer statusId) {
        this.statusId = statusId;
        if (statusId != null) {
            Status status = new Status();
            status.setId(this.statusId);
            this.statuss = status;
        }
    }

    public String getAddress() {
        return this.address;
    }

    public void setAddress(String address) {
        this.address = address;
    }

    public String getContactPersonName() {
        return this.contactPersonName;
    }

    public void setContactPersonName(String contactPersonName) {
        this.contactPersonName = contactPersonName;
    }

    public String getTel() {
        return this.tel;
    }

    public void setTel(String tel) {
        this.tel = tel;
    }

    public String getFax() {
        return this.fax;
    }

    public void setFax(String fax) {
        this.fax = fax;
    }

    public String getEmail() {
        return this.email;
    }

    public void setEmail(String email) {
        this.email = email;
    }

    public BigDecimal getLat() {
        return this.lat;
    }

    public void setLat(BigDecimal lat) {
        this.lat = lat;
    }

    public BigDecimal getLng() {
        return this.lng;
    }

    public void setLng(BigDecimal lng) {
        this.lng = lng;
    }

    public String getNote() {
        return this.note;
    }

    public void setNote(String note) {
        this.note = note;
    }

    public Date getCreatedAt() {
        return this.createdAt;
    }

    public void setCreatedAt(Date createdAt) {
        this.createdAt = createdAt;
    }

    @JsonIgnore
    public Integer getCreatedUser() {
        return this.createdUser;
    }

    @JsonSetter
    public void setCreatedUser(int createdUser) {
        this.createdUser = createdUser;
    }

    public Date getUpdatedAt() {
        return this.updatedAt;
    }

    public void setUpdatedAt(Date updatedAt) {
        this.updatedAt = updatedAt;
    }

    @JsonIgnore
    public Integer getUpdatedUser() {
        return this.updatedUser;
    }

    @JsonSetter
    public void setUpdatedUser(int updatedUser) {
        this.updatedUser = updatedUser;
    }

    public Date getDeletedAt() {
        return this.deletedAt;
    }

    public void setDeletedAt(Date deletedAt) {
        this.deletedAt = deletedAt;
    }

    @JsonIgnore
    public Integer getDeletedUser() {
        return this.deletedUser;
    }

    @JsonSetter
    public void setDeletedUser(int deletedUser) {
        this.deletedUser = deletedUser;
    }

    public String getFullCode() {
        return fullCode;
    }

    public void setFullCode(String fullCode) {
        this.fullCode = fullCode;
    }
    
    

}
