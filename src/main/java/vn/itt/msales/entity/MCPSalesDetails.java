package vn.itt.msales.entity;
// Generated Jun 25, 2015 10:30:45 AM by Hibernate Tools 4.3.1

import com.fasterxml.jackson.annotation.JsonFilter;
import com.fasterxml.jackson.annotation.JsonFormat;
import com.fasterxml.jackson.annotation.JsonIgnore;
import com.fasterxml.jackson.annotation.JsonIgnoreProperties;
import com.fasterxml.jackson.annotation.JsonSetter;
import com.fasterxml.jackson.databind.annotation.JsonSerialize;
import java.util.Date;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import javax.persistence.GenerationType;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.SequenceGenerator;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;
import javax.persistence.Transient;
import javax.validation.constraints.Max;
import javax.validation.constraints.Min;
import javax.validation.constraints.NotNull;
import vn.itt.msales.common.json.validator.MsalesValidator;

/**
 * MCPSalesDetails generated by hbm2java
 */
@Entity
@Table(name = "`mcp_sales_details`"
)
@JsonSerialize(include=JsonSerialize.Inclusion.NON_NULL)
@JsonFilter("JSONFILTER")
public class MCPSalesDetails implements java.io.Serializable {

    private static final long serialVersionUID = -4058844996041474741L;
    @Id
    @GeneratedValue(strategy=GenerationType.AUTO ,generator = "SEQ_ID")
    @SequenceGenerator(name = "SEQ_ID",sequenceName = "SEQ_MCPSALESDETAILS_ID")
    @Column(name = "ID", unique = true, nullable = false)

    private Integer id;

    @Transient
    private Integer mcpId;

    @Transient
    private Integer goodsId;

    @Transient
    private Integer unitId;
    @Column(name = "QUANTITY", nullable = false)
    @NotNull(message = "quantity không được null")
    private Integer quantity;

    @Transient
    private Integer statusId;
    @Temporal(TemporalType.TIMESTAMP)
    @Column(name = "FINISH_TIME", nullable = false, length = 19)
    @NotNull(message = "finishTime không được null")
    @JsonFormat(shape = JsonFormat.Shape.STRING, pattern = MsalesValidator.DATE_FORMAT_LONG, timezone = "GMT+7")
    private Date finishTime;
    @Column(name = "IS_ACTIVE", nullable = false)
    @NotNull(message = "isActive không được null")
    @Min(value = 0, message = MsalesValidator.ERROR_VALUE_INVALID)
    @Max(value = 1, message = MsalesValidator.ERROR_VALUE_INVALID)
    private Integer isActive;
    @Column(name = "NOTE", length = 256)
    private String note;
    @Temporal(TemporalType.TIMESTAMP)
    @Column(name = "CREATED_AT", nullable = false, length = 19)
    @JsonIgnore
    private Date createdAt;
    @Column(name = "CREATED_USER", nullable = false)
    @NotNull(message = MsalesValidator.CREATED_USER_NULL)
    private Integer createdUser;
    
    @Temporal(TemporalType.TIMESTAMP)
    @Column(name = "UPDATED_AT", length = 19)
    @JsonIgnore
    private Date updatedAt;

    @Column(name = "UPDATED_USER", nullable = false)
    @NotNull(message = MsalesValidator.UPDATED_USER_NULL)
    private Integer updatedUser;

    @Temporal(TemporalType.TIMESTAMP)
    @Column(name = "DELETED_AT", length = 19)
    @JsonIgnore
    private Date deletedAt;

    @Column(name = "DELETED_USER", nullable = false)
    @NotNull(message = MsalesValidator.DELETED_USER_NULL)
    private Integer deletedUser;

    @ManyToOne(fetch = FetchType.EAGER)
    @JoinColumn(name = "MCP_ID", nullable = false)
    @JsonIgnoreProperties(value = {"beginDate", "finishTime", "isActive", "note", "implementEmployees", "statuss"})
    private MCP mcps;

    @NotNull(message = "mcpId không được null")
    public MCP getMcps() {
        return mcps;
    }

    public void setMcps(MCP mcps) {
        this.mcps = mcps;

    }

    @ManyToOne(fetch = FetchType.EAGER)
    @JoinColumn(name = "GOODS_ID", nullable = false)
    @JsonIgnoreProperties(value = {"parents", "goodsCode", "statuss", "goodsCategorys", "isRecover", "price", "factor", "order"})
    private Goods goodss;

    @NotNull(message = "goodsId không được null ")
    public Goods getGoodss() {
        return goodss;
    }

    public void setGoodss(Goods goodss) {
        this.goodss = goodss;

    }

    @ManyToOne(fetch = FetchType.EAGER)
    @JoinColumn(name = "UNIT_ID", nullable = false)
    @JsonIgnoreProperties(value = {"order","code","companys"})
    private Unit units;

    @NotNull(message = "unitId không được null")
    public Unit getUnits() {
        return units;

    }

    public void setUnits(Unit units) {
        this.units = units;

    }
    @ManyToOne(fetch = FetchType.EAGER)
    @JoinColumn(name = "STATUS_ID", nullable = false)
    @NotNull(message = "statusId không được null")
    @JsonIgnoreProperties(value = {"statusTypes","value"})
    private Status statuss;

    public Status getStatuss() {
        return statuss;
    }

    public void setStatuss(Status statuss) {
        this.statuss = statuss;

    }

    public MCPSalesDetails() {
    }

    public MCPSalesDetails(Integer mcpId, Integer goodsId, Integer unitId, Integer quantity, Integer statusId, Date finishTime, Integer isActive, Date createdAt, Integer createdUser, Date updatedAt, Integer updatedUser, Date deletedAt, Integer deletedUser) {
        this.mcpId = mcpId;
        this.goodsId = goodsId;
        this.unitId = unitId;
        this.quantity = quantity;
        this.statusId = statusId;
        this.finishTime = finishTime;
        this.isActive = isActive;
        this.createdAt = createdAt;
        this.createdUser = createdUser;
        this.updatedAt = updatedAt;
        this.updatedUser = updatedUser;
        this.deletedAt = deletedAt;
        this.deletedUser = deletedUser;
    }

    public MCPSalesDetails(Integer mcpId, Integer goodsId, Integer unitId, Integer quantity, Integer statusId, Date finishTime, Integer isActive, String note, Date createdAt, Integer createdUser, Date updatedAt, Integer updatedUser, Date deletedAt, Integer deletedUser) {
        this.mcpId = mcpId;
        this.goodsId = goodsId;
        this.unitId = unitId;
        this.quantity = quantity;
        this.statusId = statusId;
        this.finishTime = finishTime;
        this.isActive = isActive;
        this.note = note;
        this.createdAt = createdAt;
        this.createdUser = createdUser;
        this.updatedAt = updatedAt;
        this.updatedUser = updatedUser;
        this.deletedAt = deletedAt;
        this.deletedUser = deletedUser;
    }

    public Integer getId() {
        return this.id;
    }

    public void setId(Integer id) {
        this.id = id;
    }

    @JsonIgnore
    public Integer getMcpId() {
        return this.mcpId;
    }

    @JsonSetter
    public void setMcpId(Integer mcpId) {
        this.mcpId = mcpId;
        if (mcpId != null) {
            MCP s = new MCP();
            s.setId(this.getMcpId());
            this.mcps = s;
        }
    }

    
    public Integer getGoodsId() {
        return this.goodsId;
    }

    @JsonSetter
    public void setGoodsId(Integer goodsId) {
        this.goodsId = goodsId;
        if (goodsId != null) {
            Goods g = new Goods();
            g.setId(this.getGoodsId());
            this.goodss = g;
        }
    }

    
    public Integer getUnitId() {
        return this.unitId;
    }

    @JsonSetter
    public void setUnitId(Integer unitId) {
        this.unitId = unitId;
        if (unitId != null) {
            Unit u = new Unit();
            u.setId(this.getUnitId());
            this.units = u;
        }
    }

    public Integer getQuantity() {
        return this.quantity;
    }

    public void setQuantity(Integer quantity) {
        this.quantity = quantity;
    }

  
    public Integer getStatusId() {
        return this.statusId;
    }

    @JsonSetter
    public void setStatusId(Integer statusId) {
        this.statusId = statusId;
        if (statusId != null) {
            Status s = new Status();
            s.setId(this.getStatusId());
            this.statuss = s;
        }
    }

    public Date getFinishTime() {
        return this.finishTime;
    }

    public void setFinishTime(Date finishTime) {
        this.finishTime = finishTime;
    }

    public Integer getIsActive() {
        return this.isActive;
    }

    public void setIsActive(Integer isActive) {
        this.isActive = isActive;
    }

    public String getNote() {
        return this.note;
    }

    public void setNote(String note) {
        this.note = note;
    }

    public Date getCreatedAt() {
        return this.createdAt;
    }

    public void setCreatedAt(Date createdAt) {
        this.createdAt = createdAt;
    }

    @JsonIgnore
    public Integer getCreatedUser() {
        return this.createdUser;
    }

    @JsonSetter
    public void setCreatedUser(Integer createdUser) {
        this.createdUser = createdUser;
    }

    public Date getUpdatedAt() {
        return this.updatedAt;
    }

    public void setUpdatedAt(Date updatedAt) {
        this.updatedAt = updatedAt;
    }

    @JsonIgnore
    public Integer getUpdatedUser() {
        return this.updatedUser;
    }

    @JsonSetter
    public void setUpdatedUser(Integer updatedUser) {
        this.updatedUser = updatedUser;
    }

    public Date getDeletedAt() {
        return this.deletedAt;
    }

    public void setDeletedAt(Date deletedAt) {
        this.deletedAt = deletedAt;
    }

    @JsonIgnore
    public Integer getDeletedUser() {
        return this.deletedUser;
    }

    @JsonSetter
    public void setDeletedUser(Integer deletedUser) {
        this.deletedUser = deletedUser;
    }

}
