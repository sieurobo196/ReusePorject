package vn.itt.msales.entity;
// Generated Jun 11, 2015 10:37:14 AM by Hibernate Tools 4.3.1

import java.util.Date;
import java.util.List;

import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.GeneratedValue;
import javax.persistence.Id;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;
import javax.persistence.UniqueConstraint;

import com.fasterxml.jackson.annotation.JsonFilter;
import com.fasterxml.jackson.annotation.JsonFormat;
import com.fasterxml.jackson.annotation.JsonIgnore;
import com.fasterxml.jackson.annotation.JsonIgnoreProperties;
import com.fasterxml.jackson.annotation.JsonSetter;
import com.fasterxml.jackson.databind.annotation.JsonSerialize;

import javax.persistence.FetchType;
import javax.persistence.GenerationType;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.SequenceGenerator;
import javax.persistence.Transient;
import javax.validation.constraints.NotNull;
import javax.validation.constraints.Pattern;
import javax.validation.constraints.Size;

import org.hibernate.validator.constraints.Email;
import org.hibernate.validator.constraints.Length;
import org.springframework.format.annotation.NumberFormat;

import vn.itt.msales.common.json.validator.MsalesValidator;

/**
 * User generated by hbm2java
 */
@Entity
@Table(name = "`user`", uniqueConstraints = @UniqueConstraint(columnNames = {"USERNAME", "EMAIL"}))
@JsonFilter("JSONFILTER")
@JsonSerialize(include = JsonSerialize.Inclusion.NON_NULL)
public class User implements java.io.Serializable {

    private static final long serialVersionUID = 6642171971047801017L;

    @Id
    @GeneratedValue(strategy = GenerationType.AUTO, generator = "SEQ_ID")
    @SequenceGenerator(name = "SEQ_ID", sequenceName = "SEQ_USER_ID")
    private Integer id;

    @Column(name = "USERNAME", unique = true, nullable = false, length = 100)
    @Size(min = 3, message = MsalesValidator.USER_USERNAME_LENGTH_MIN)
    @NotNull(message = MsalesValidator.USER_USERNAME_NULL)
    private String username;

    @Column(name = "USER_CODE", nullable = false, length = 100)
//    @NotNull(message = MsalesValidator.USER_CODE_NULL)
//    @Size(min = 3, message = MsalesValidator.USER_CODE_LENGHT_MIN)
    private String userCode;

    @Column(name = "PASSWORD", nullable = false, length = 100)
    @NotNull(message = MsalesValidator.USER_PASSWORD_NULL)
    @Size(min = 6, message = MsalesValidator.USER_PASSWORD_LENGTH_MIN)
    private String password;

    @Column(name = "LAST_NAME", nullable = false, length = 100)
    @NotNull(message = MsalesValidator.USER_LAST_NAME)
    @Length(min = 1, message = MsalesValidator.USER_LAST_NAME_INVALID)
    private String lastName;

    @Column(name = "FIRST_NAME", nullable = false, length = 100)
    @NotNull(message = MsalesValidator.USER_FIRST_NAME)
    @Length(min = 1, message = MsalesValidator.USER_FIRST_NAME_INVALID)
    private String firstName;

    @Temporal(TemporalType.TIMESTAMP)
    @Column(name = "BIRTHDAY", length = 10)
    @JsonFormat(shape = JsonFormat.Shape.STRING, pattern = MsalesValidator.DATE_FORMAT_SHORT)
    private Date birthday;

    @Column(name = "SEX", length = 1)
    private Boolean sex;

    @Column(name = "EMAIL", length = 256)
    @Email(message = MsalesValidator.USER_EMAIL_INVALID, regexp = MsalesValidator.EMAIL_PATTERN)
    private String email;

    @Column(name = "YAHOO_ID", length = 128)
    private String yahooId;
    @Column(name = "SKYPE_ID", length = 128)
    private String skypeId;
    @Column(name = "ISDN", length = 128)
    private String isdn;

    @Column(name = "TEL", length = 15)
    @Pattern(regexp = MsalesValidator.PHONE_NUMBER, message = MsalesValidator.USER_PHONE_INVALID)
    private String tel;

    @Column(name = "ADDRESS")
    private String address;

    @Transient
    @NumberFormat(style = NumberFormat.Style.NUMBER)
    private Integer locationId;

    @Transient
    @NumberFormat(style = NumberFormat.Style.NUMBER)
    private Integer monitoringUserId;

    @Transient
    @NumberFormat(style = NumberFormat.Style.NUMBER)
    private Integer employerUserId;

    @Column(name = "NOTE", length = 1024)
    private String note;

    @Column(name = "IS_ACTIVE")
    @NumberFormat(style = NumberFormat.Style.NUMBER)
//    @NotNull(message = MsalesValidator.USER_IS_ACTIVE)
    private Integer isActive;

    @Column(name = "ACTIVE_CODE", length = 100)
//    @NotNull(message = MsalesValidator.USER_ACTIVE_CODE)
    private String activeCode;

    @Column(name = "EMPLOYER_TYPE")
    @NumberFormat(style = NumberFormat.Style.NUMBER)
//    @NotNull(message = MsalesValidator.USER_EMPLOYER_USERTYPE)
    private Integer employerType;

    @Column(name = "USE_EVOUCHER")
    @NumberFormat(style = NumberFormat.Style.NUMBER)
//    @NotNull(message = MsalesValidator.USER_EVOUCHER)
    private Integer useEvoucher;

    @Column(name = "IP_LAST_LOGIN", length = 20)
    @Pattern(regexp = MsalesValidator.IP_ADDRESS, message = MsalesValidator.USER_IP_ADDRESS)
    private String ipLastLogin;

    @Transient
//    @NotNull(message = MsalesValidator.USER_STATUS)
    @NumberFormat(style = NumberFormat.Style.NUMBER)
    private Integer statusId;

    @ManyToOne(fetch = FetchType.EAGER)
    @JoinColumn(name = "STATUS_ID", nullable = false)
    private Status statuss;

    public Status getStatuss() {
        return statuss;
    }

    public void setStatuss(Status statuss) {
        this.statuss = statuss;
    }

    @Transient
    private UserRole userRole;

    public UserRole getUserRole() {
        return userRole;
    }

    public void setUserRole(UserRole userRole) {
        this.userRole = userRole;
    }

    @Temporal(TemporalType.TIMESTAMP)
    @Column(name = "CREATED_AT", nullable = false, length = 19)
    @JsonFormat(shape = JsonFormat.Shape.STRING, pattern = MsalesValidator.DATE_FORMAT)
    private Date createdAt = new Date();

    @Column(name = "CREATED_USER", nullable = false)
    @NumberFormat(style = NumberFormat.Style.NUMBER)
    @NotNull(message = MsalesValidator.USER_CREATEDUSER)
    private Integer createdUser;

    @Temporal(TemporalType.TIMESTAMP)
    @Column(name = "UPDATED_AT", length = 19)
    @JsonIgnore
    private Date updatedAt;

    @Column(name = "UPDATED_USER", nullable = false)
    @NotNull(message = MsalesValidator.UPDATED_USER_NULL)
    private Integer updatedUser;

    @Temporal(TemporalType.TIMESTAMP)
    @Column(name = "DELETED_AT", length = 19)
    @JsonIgnore
    private Date deletedAt;

    @Column(name = "DELETED_USER", nullable = false)
    @NotNull(message = MsalesValidator.DELETED_USER_NULL)
    private Integer deletedUser;

    @ManyToOne(fetch = FetchType.EAGER)
    @JoinColumn(name = "LOCATION_ID", nullable = false)
//    @NotNull(message = MsalesValidator.USER_LOCATION)
    private Location locations;

    @ManyToOne(fetch = FetchType.EAGER)
    @JoinColumn(name = "MONITORING_USER")
//    @NotNull(message = MsalesValidator.USER_MONTORING_USER)
    private User monitoringUsers;

    @ManyToOne(fetch = FetchType.EAGER)
    @JoinColumn(name = "EMPLOYER_USER_ID")
//    @NotNull(message = MsalesValidator.USER_IMPLEMENT)
    private User employerUsers;

    @Transient
    private Integer companyId;

    @ManyToOne(fetch = FetchType.EAGER)
    @JoinColumn(name = "COMPANY_ID", nullable = false)
    @NotNull(message = MsalesValidator.USER_COMPANY)
    private Company companys;

    @Transient
    private Channel channels;

    @JsonIgnore
    public Channel getChannels() {
        return channels;
    }

    public void setChannels(Channel channels) {
        this.channels = channels;
    }

    public User() {
    }

    public User(String username, String userCode, String password, String lastName, String firstName, Integer locationId, Integer monitoringUser, Integer employerUserId, Integer isActive, String activeCode, Integer employerType, Integer useEvoucher, Integer statusId, Date createdAt, Integer createdUser, Date updatedAt, Integer updatedUser, Date deletedAt, Integer deletedUser, Integer companyId) {
        this.username = username;
        this.userCode = userCode;
        this.password = password;
        this.lastName = lastName;
        this.firstName = firstName;
        this.locationId = locationId;
        this.monitoringUserId = monitoringUser;
        this.employerUserId = employerUserId;
        this.isActive = isActive;
        this.activeCode = activeCode;
        this.employerType = employerType;
        this.useEvoucher = useEvoucher;
        this.statusId = statusId;
        this.createdAt = createdAt;
        this.createdUser = createdUser;
        this.updatedAt = updatedAt;
        this.updatedUser = updatedUser;
        this.deletedAt = deletedAt;
        this.deletedUser = deletedUser;
        this.companyId = companyId;
    }

    public User(String username, String userCode, String password, String lastName, String firstName, Date birthday, boolean sex, String email, String yahooId, String skypeId, String isdn, String tel, String address, Integer locationId, Integer monitoringUser, Integer employerUserId, String note, Integer isActive, String activeCode, Integer employerType, Integer useEvoucher, String ipLastLogin, Integer statusId, Date createdAt, Integer createdUser, Date updatedAt, Integer updatedUser, Date deletedAt, Integer deletedUser, Integer companyId) {
        this.username = username;
        this.userCode = userCode;
        this.password = password;
        this.lastName = lastName;
        this.firstName = firstName;
        this.birthday = birthday;
        this.sex = sex;
        this.email = email;
        this.yahooId = yahooId;
        this.skypeId = skypeId;
        this.isdn = isdn;
        this.tel = tel;
        this.address = address;
        this.locationId = locationId;
        this.monitoringUserId = monitoringUser;
        this.employerUserId = employerUserId;
        this.note = note;
        this.isActive = isActive;
        this.activeCode = activeCode;
        this.employerType = employerType;
        this.useEvoucher = useEvoucher;
        this.ipLastLogin = ipLastLogin;
        this.statusId = statusId;
        this.createdAt = createdAt;
        this.createdUser = createdUser;
        this.updatedAt = updatedAt;
        this.updatedUser = updatedUser;
        this.deletedAt = deletedAt;
        this.deletedUser = deletedUser;
        this.companyId = companyId;
    }

    @JsonIgnore
    public Integer getCompanyId() {
        return companyId;
    }

    @JsonSetter
    public void setCompanyId(Integer companyId) {
        this.companyId = companyId;
        Company company = new Company();
        company.setId(companyId);
        this.companys = company;
    }

    @JsonIgnoreProperties(value = {"statuss", "locations", "locationId", "statusId", "address", "contactPersonName", "tel", "fax", "email", "lat", "lng", "logoPath", "note", "DatecreatedAt", "createdUser", "DateupdatedAt", "updatedUser", "DatedeletedAt", "deletedUser", "bgColor", "textColor", "buttonBgColor", "buttonBgColorOver", "topBarBGColor"})
    public Company getCompanys() {
        return companys;
    }

    public void setCompanys(Company companys) {
        this.companys = companys;
    }

    @JsonIgnoreProperties(value = {"createdUser", "companys", "monitoringUsers", "username", "userCode", "birthday", "sex", "email", "yahooId", "skypeId", "isdn", "tel", "address", "note", "isActive", "activeCode", "employerType", "useEvoucher", "ipLastLogin", "statusId", "updatedAt", "updatedUser", "location", "locations", "employerUsers"})
    public User getMonitoringUsers() {
        return monitoringUsers;
    }

    @JsonSetter
    public void setMonitoringUsers(User monitoringUser) { 
        this.monitoringUsers = monitoringUser;
    }

    @JsonIgnoreProperties(value = {"createdUser", "companys", "monitoringUsers", "username", "userCode", "birthday", "sex", "email", "yahooId", "skypeId", "isdn", "tel", "address", "note", "isActive", "activeCode", "employerType", "useEvoucher", "ipLastLogin", "statusId", "updatedAt", "updatedUser", "location", "locations", "employerUsers"})
    public User getEmployerUsers() {

        return employerUsers;
    }

    @JsonSetter
    public void setEmployerUsers(User imployerUser) {
        if (this.getId().equals(imployerUser.getId())) {
            User user = new User();
            user.setId(imployerUser.getId());
            user.setFirstName(imployerUser.getFirstName());
            user.setLastName(imployerUser.getLastName());
            this.employerUsers = user;
        } else {
            this.employerUsers = imployerUser;
            this.employerUserId = imployerUser.getId();
        }
    }

    @JsonIgnoreProperties(value = {"code", "locationType", "note", "lat", "lng", "parents"})
    public Location getLocations() {
        return locations;
    }

    public void setLocations(Location locations) {
        this.locations = locations;
    }

    public Integer getId() {
        return this.id;
    }

    public void setId(Integer id) {
        this.id = id;
    }

    public String getUsername() {
        return this.username;
    }

    public void setUsername(String username) {
        this.username = username;
    }

    public String getUserCode() {
        return this.userCode;
    }

    public void setUserCode(String userCode) {
        this.userCode = userCode;
    }

    
    public String getPassword() {
        return this.password;
    }

    @JsonSetter
    public void setPassword(String password) {
        this.password = password;
    }

    public String getLastName() {
        return this.lastName;
    }

    public void setLastName(String lastName) {
        this.lastName = lastName;
    }

    public String getFirstName() {
        return this.firstName;
    }

    public void setFirstName(String firstName) {
        this.firstName = firstName;
    }

    public Date getBirthday() {
        return this.birthday;
    }

    public void setBirthday(Date birthday) {
        this.birthday = birthday;
    }

    public Boolean getSex() {
        return this.sex;
    }

    public void setSex(Boolean sex) {
        this.sex = sex;
    }

    public String getEmail() {
        return this.email;
    }

    public void setEmail(String email) {
        this.email = email;
    }

    public String getYahooId() {
        return this.yahooId;
    }

    public void setYahooId(String yahooId) {
        this.yahooId = yahooId;
    }

    public String getSkypeId() {
        return this.skypeId;
    }

    public void setSkypeId(String skypeId) {
        this.skypeId = skypeId;
    }

    public String getIsdn() {
        return this.isdn;
    }

    public void setIsdn(String isdn) {
        this.isdn = isdn;
    }

    public String getTel() {
        return this.tel;
    }

    public void setTel(String tel) {
        this.tel = tel;
    }

    public String getAddress() {
        return this.address;
    }

    public void setAddress(String address) {
        this.address = address;
    }

    @JsonIgnore
    public Integer getLocationId() {
        return this.locationId;
    }

    @JsonSetter
    public void setLocationId(Integer locationId) {
        this.locationId = locationId;
        Location l = new Location();
        l.setId(this.locationId);
        this.locations = l;
    }

    @JsonIgnore
    public Integer getMonitoringUserId() {
        return this.monitoringUserId;
    }

    @JsonSetter
    public void setMonitoringUserId(Integer monitoringUserId) {
        this.monitoringUserId = monitoringUserId;
        User moni = new User();
        moni.setId(monitoringUserId);
        this.monitoringUsers = moni;
    }

    @JsonIgnore
    public Integer getEmployerUserId() {
        return this.employerUserId;
    }

    @JsonSetter
    public void setEmployerUserId(Integer employerUserId) {
        this.employerUserId = employerUserId;
        User imUser = new User();
        imUser.setId(employerUserId);
        this.employerUsers = imUser;
    }

    public String getNote() {
        return this.note;
    }

    public void setNote(String note) {
        this.note = note;
    }

    public Integer getIsActive() {
        return this.isActive;
    }

    public void setIsActive(Integer isActive) {
        this.isActive = isActive;
    }

    public String getActiveCode() {
        return this.activeCode;
    }

    public void setActiveCode(String activeCode) {
        this.activeCode = activeCode;
    }

    public Integer getEmployerType() {
        return this.employerType;
    }

    public void setEmployerType(Integer employerType) {
        this.employerType = employerType;
    }

    public Integer getUseEvoucher() {
        return this.useEvoucher;
    }

    public void setUseEvoucher(Integer useEvoucher) {
        this.useEvoucher = useEvoucher;
    }

    public String getIpLastLogin() {
        return this.ipLastLogin;
    }

    public void setIpLastLogin(String ipLastLogin) {
        this.ipLastLogin = ipLastLogin;
    }

    @JsonIgnore
    public Integer getStatusId() {
        return this.statusId;
    }

    @JsonSetter
    public void setStatusId(Integer statusId) {
        this.statusId = statusId;
        if (statusId != null) {
            Status status = new Status();
            status.setId(this.statusId);
            this.statuss = status;
        }
    }

    @JsonIgnore
    public Date getCreatedAt() {
        return this.createdAt;
    }

    public void setCreatedAt(Date createdAt) {
        this.createdAt = new Date();
    }

    public Integer getCreatedUser() {
        return this.createdUser;
    }

    public void setCreatedUser(Integer createdUser) {
        this.createdUser = createdUser;
    }

    @JsonIgnore
    public Date getUpdatedAt() {
        return this.updatedAt;
    }

    public void setUpdatedAt(Date updatedAt) {
        this.updatedAt = new Date();
    }

    public Integer getUpdatedUser() {
        return this.updatedUser;
    }

    public void setUpdatedUser(Integer updatedUser) {
        this.updatedUser = updatedUser;
    }

    @JsonIgnore
    public Date getDeletedAt() {
        return this.deletedAt;
    }

    public void setDeletedAt(Date deletedAt) {
        this.deletedAt = new Date();
    }

    @JsonIgnore
    public Integer getDeletedUser() {
        return this.deletedUser;
    }

    @JsonSetter
    public void setDeletedUser(int deletedUser) {
        this.deletedUser = deletedUser;
    }
    @Transient
    private String name;

    public String getName() {
        return name;
    }

    public void setName(String name) {
        this.name = name;
    }

    @Transient
    private String location;

    public String getLocation() {
        return location;
    }

    public void setLocation(String location) {
        this.location = location;
    }

    @Transient
    private Double ratio;

    public Double getRatio() {
        return ratio;
    }

    public void setRatio(Double ratio) {
        this.ratio = ratio;
    }
    @Transient
    private String userRoles;

    public String getUserRoles() {
        return userRoles;
    }

    public void setUserRoles(String userRoles) {
        this.userRoles = userRoles;
    }
    
    @Transient
    private List<MCP> mcpList;

    @JsonIgnoreProperties(value={"createdAt","salesFocusPerMonth","newPOS","salesPerMonth","createdUser","type", "beginDate", "finishTime", "isActive", "implementEmployees", "statuss"})
	public List<MCP> getMcpList() {
		return mcpList;
	}

	public void setMcpList(List<MCP> mcpList) {
		this.mcpList = mcpList;
	}
}
