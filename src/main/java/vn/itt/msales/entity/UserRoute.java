package vn.itt.msales.entity;
// Generated Jul 16, 2015 10:54:30 AM by Hibernate Tools 4.3.1

import com.fasterxml.jackson.annotation.JsonFilter;
import com.fasterxml.jackson.annotation.JsonFormat;
import com.fasterxml.jackson.annotation.JsonIgnore;
import com.fasterxml.jackson.databind.annotation.JsonSerialize;

import java.math.BigDecimal;
import java.util.Date;

import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.GeneratedValue;
import javax.persistence.GenerationType;
import javax.persistence.Id;
import javax.persistence.SequenceGenerator;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;
import javax.validation.constraints.NotNull;

import vn.itt.msales.common.json.validator.MsalesValidator;

/**
 * UserRoute generated by hbm2java
 */
@Entity
@Table(name = "`user_route`")
@JsonFilter("JSONFILTER")
@JsonSerialize(include=JsonSerialize.Inclusion.NON_NULL)
public class UserRoute implements java.io.Serializable {
    private static final long serialVersionUID = 4244755439292267581L;

    @Id
    @GeneratedValue(strategy=GenerationType.AUTO ,generator = "SEQ_ID")
    @SequenceGenerator(name = "SEQ_ID",sequenceName = "SEQ_USERROUTE_ID")
    private Integer id;
    
    @NotNull(message = MsalesValidator.USERROUTE_LAT_NULL)
    @Column(name = "LAT", nullable = false, precision = 24, scale = 15)
    private BigDecimal lat;
    
    @NotNull(message = MsalesValidator.USERROUTE_LNG_NULL)
    @Column(name = "LNG", nullable = false, precision = 24, scale = 15)
    private BigDecimal lng;
    
    @NotNull(message = MsalesValidator.USERROUTE_ROUTE_AT_NULL)
    @Temporal(TemporalType.TIMESTAMP)
    @Column(name = "ROUTE_AT", nullable = false, length = 19)
    private Date routeAt;
    
    @Column(name = "NOTE",nullable = true, length = 256)
    private String note;

    public String getNote() {
        return note;
    }

    public void setNote(String note) {
        this.note = note;
    }
    
    @Temporal(TemporalType.TIMESTAMP)
    @Column(name = "CREATED_AT", nullable = false, length = 19)
    @JsonIgnore
    private Date createdAt;

    @Temporal(TemporalType.TIMESTAMP)
    @Column(name = "UPDATED_AT", length = 19)
    @JsonIgnore
    private Date updatedAt;

    @Column(name = "UPDATED_USER", nullable = false)
    @NotNull(message = MsalesValidator.UPDATED_USER_NULL)
    private Integer updatedUser;

    @Temporal(TemporalType.TIMESTAMP)
    @Column(name = "DELETED_AT", length = 19)
    @JsonIgnore
    private Date deletedAt;

    @Column(name = "DELETED_USER", nullable = false)
    @NotNull(message = MsalesValidator.DELETED_USER_NULL)
    private Integer deletedUser;

    @Column(name = "CREATED_USER", nullable = false)
    private Integer createdUser;

//    @NotNull(message = MsalesValidator.USERROUTE_USER_ID_NULL)
//    @ManyToOne(fetch = FetchType.EAGER)    
//    @JoinColumn(name = "CREATED_USER", nullable = false)
//    @JsonIgnoreProperties(value = {"username", "userCode", "birthday", "sex", "email", "yahooId", "skypeId",
//        "isdn", "tel", "address", "note", "isActive", "activeCode", "employerType", "useEvoucher", "ipLastLogin",
//        "statusId", "createdUser", "updatedUser", "locations", "monitoringUsers", "employerUsers", "companys", "statuss"})
//    private User user;

    public UserRoute() {
    }

    public UserRoute(Integer id, BigDecimal lat, BigDecimal lng, Date routeAt, String note, Date createdAt, Integer createdUser, Date updatedAt, Integer updatedUser, Date deletedAt, Integer deletedUser) {
        this.id = id;
        this.lat = lat;
        this.lng = lng;
        this.routeAt = routeAt;
        this.note = note;
        this.createdUser = createdUser;
        this.createdAt = createdAt;
        this.updatedAt = updatedAt;
        this.updatedUser = updatedUser;
        this.deletedAt = deletedAt;
        this.deletedUser = deletedUser;
        
    }

    public Integer getId() {
        return this.id;
    }

    public void setId(Integer id) {
        this.id = id;
    }

    public BigDecimal getLat() {
        return this.lat;
    }

    public void setLat(BigDecimal lat) {
        this.lat = lat;
    }

    public BigDecimal getLng() {
        return this.lng;
    }

    public void setLng(BigDecimal lng) {
        this.lng = lng;
    }

    @JsonFormat(shape = JsonFormat.Shape.STRING, pattern = MsalesValidator.DATE_FORMAT_LONG, timezone = "GMT+7")
    public Date getRouteAt() {
        return this.routeAt;
    }

    public void setRouteAt(Date routeAt) {
        this.routeAt = routeAt;
    }

    public Date getCreatedAt() {
        return this.createdAt;
    }

    public void setCreatedAt(Date createdAt) {
        this.createdAt = createdAt;
    }

//    public User getUser() {
//        return user;
//    }
//
//    public void setUser(User user) {
//        this.user = user;
//    }

    public Date getUpdatedAt() {
        return this.updatedAt;
    }

    public void setUpdatedAt(Date updatedAt) {
        this.updatedAt = updatedAt;
    }

    @JsonIgnore
    public Integer getUpdatedUser() {
        return this.updatedUser;
    }

    public void setUpdatedUser(Integer updatedUser) {
        this.updatedUser = updatedUser;
    }

    public Date getDeletedAt() {
        return this.deletedAt;
    }

    public void setDeletedAt(Date deletedAt) {
        this.deletedAt = deletedAt;
    }

    @JsonIgnore
    public Integer getDeletedUser() {
        return this.deletedUser;
    }

    public void setDeletedUser(Integer deletedUser) {
        this.deletedUser = deletedUser;
    }

  //  @JsonIgnore
    public Integer getCreatedUser() {
        return createdUser;
    }

  //  @JsonSetter
    public void setCreatedUser(Integer createdUser) {
        this.createdUser = createdUser;
//        if (createdUser != null) {
//            User u = new User();
//            u.setId(this.createdUser);
//            this.user = u;
//        }
    }

}
