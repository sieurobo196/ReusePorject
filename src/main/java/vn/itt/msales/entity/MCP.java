package vn.itt.msales.entity;
// Generated Jun 16, 2015 6:34:19 PM by Hibernate Tools 4.3.1

import com.fasterxml.jackson.annotation.JsonFilter;
import com.fasterxml.jackson.annotation.JsonFormat;
import com.fasterxml.jackson.annotation.JsonGetter;
import com.fasterxml.jackson.annotation.JsonIgnore;
import com.fasterxml.jackson.annotation.JsonIgnoreProperties;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonSetter;
import com.fasterxml.jackson.databind.annotation.JsonSerialize;

import java.util.Date;
import java.util.List;

import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import javax.persistence.GenerationType;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.SequenceGenerator;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;
import javax.persistence.Transient;
import javax.validation.constraints.Max;
import javax.validation.constraints.Min;
import javax.validation.constraints.NotNull;

import org.hibernate.validator.constraints.NotEmpty;

import vn.itt.msales.common.json.validator.MsalesValidator;

/**
 * MCP generated by hbm2java
 */
@Entity
@Table(name = "`mcp`")
@JsonFilter("JSONFILTER")
@JsonSerialize(include=JsonSerialize.Inclusion.NON_NULL)
public class MCP implements java.io.Serializable {

    private static final long serialVersionUID = 6679001786103605769L;
    
    @Id
    @GeneratedValue(strategy=GenerationType.AUTO ,generator = "SEQ_ID")
    @SequenceGenerator(name = "SEQ_ID",sequenceName = "SEQ_MCP_ID")
    @Column(name = "ID", unique = true, nullable = false)
    private Integer id;

    @Column(name = "TYPE", nullable = false)
    @NotNull(message = "type không được null")
    @Min(value = 1, message = MsalesValidator.ERROR_VALUE_INVALID)
    @Max(value = 2, message = MsalesValidator.ERROR_VALUE_INVALID)
    private Integer type;

    @Column(name = "NAME", nullable = false, length = 256)
    @NotNull(message = "name không được null")
    @NotEmpty(message = "name không được rỗng")
    private String name;

    @Temporal(TemporalType.TIMESTAMP)
    @Column(name = "BEGIN_DATE", nullable = false, length = 10)
    @NotNull(message = "beginDate không được null")
    @JsonFormat(shape = JsonFormat.Shape.STRING, pattern = MsalesValidator.DATE_FORMAT_SHORT, timezone = "GMT+7")
    private Date beginDate;

    @Transient
    private Integer implementEmployeeId;

    @Transient
    private Integer statusId;

    @Temporal(TemporalType.TIMESTAMP)
    @Column(name = "FINISH_TIME", nullable = false, length = 19)
    @NotNull(message = "finishTime không được null ")
    @JsonFormat(shape = JsonFormat.Shape.STRING, pattern = MsalesValidator.DATE_FORMAT_SHORT, timezone = "GMT+7")
    private Date finishTime;

    @Column(name = "IS_ACTIVE", nullable = false)
    @NotNull(message = "isActive không được null ")
    @Min(value = 0, message = MsalesValidator.ERROR_VALUE_INVALID)
    @Max(value = 1, message = MsalesValidator.ERROR_VALUE_INVALID)
    private Integer isActive;

    @Column(name = "NOTE", length = 256)
    private String note;

    @Temporal(TemporalType.TIMESTAMP)
    @Column(name = "CREATED_AT", nullable = false, length = 19)
    private Date createdAt;

    @Column(name = "CREATED_USER", nullable = false)
    @NotNull(message = MsalesValidator.CREATED_USER_NULL)
    private Integer createdUser;

    @Temporal(TemporalType.TIMESTAMP)
    @Column(name = "UPDATED_AT", length = 19)
    private Date updatedAt;

    @Column(name = "UPDATED_USER", nullable = false)
    @NotNull(message = MsalesValidator.UPDATED_USER_NULL)
    private Integer updatedUser;

    @Temporal(TemporalType.TIMESTAMP)
    @Column(name = "DELETED_AT", length = 19)
    @JsonIgnore
    private Date deletedAt;

    @Column(name = "DELETED_USER", nullable = false)
    @NotNull(message = MsalesValidator.DELETED_USER_NULL)
    private Integer deletedUser;

    @ManyToOne(fetch = FetchType.EAGER)
    @JoinColumn(name = "IMPLEMENT_EMPLOYEE_ID", nullable = false)
    @NotNull(message = "implementEmployeeId không được null")
    @JsonIgnoreProperties(value = {"statuss","companys", "password", "username", "birthday", "sex", "email", "yahooId", "skypeId", "isdn", "tel", "address", "locations", "monitoringUsers", "employerUserId", "note", "isActive", "activeCode", "employerType", "useEvoucher", "ipLastLogin", "statusId", "createdAt", "createdUser", "updatedAt", "updatedUser", "deletedAt", "employerUsers"})
    private User implementEmployees;

    @Column(name = "NEW_POS", nullable = true)
    private int newPOS;
    @Column(name = "SALES_PER_MONTH", nullable = true)
    private Long salesPerMonth;
    @Column(name = "SALES_FOCUS_PER_MONTH", nullable = true)
    private Long salesFocusPerMonth;

    public int getNewPOS() {
        return newPOS;
    }

    public void setNewPOS(int newPOS) {
        this.newPOS = newPOS;
    }

    public Long getSalesPerMonth() {
        return salesPerMonth;
    }

    public void setSalesPerMonth(Long salesPerMonth) {
        this.salesPerMonth = salesPerMonth;
    }

    public Long getSalesFocusPerMonth() {
        return salesFocusPerMonth;
    }

    public void setSalesFocusPerMonth(Long salesFocusPerMonth) {
        this.salesFocusPerMonth = salesFocusPerMonth;
    }

    

    public User getImplementEmployees() {
        return implementEmployees;
    }

    public void setImplementEmployees(User implementEmployees) {
        this.implementEmployees = implementEmployees;

    }

    @ManyToOne(fetch = FetchType.EAGER)
    @JoinColumn(name = "STATUS_ID", nullable = false)
    @NotNull(message = "statusId không được null")
    @JsonIgnoreProperties(value = {"value","statusType"})
    private Status statuss;
    
    @Transient
    private Long locationid;

    public Status getStatuss() {
        return statuss;
    }

    public void setStatuss(Status statuss) {
        this.statuss = statuss;

    }

    @Transient
    List<MCPSalesDetails> mcpSalesDetailss;

    @JsonGetter
    @JsonIgnoreProperties(value = {"mcps"})// "goodss",, "statuss" 
    public List<MCPSalesDetails> getMcpSalesDetailss() {
        return mcpSalesDetailss;
    }

    @JsonSetter
    public void setMcpSalesDetailss(List<MCPSalesDetails> mcpSalesDetailss) {
        this.mcpSalesDetailss = mcpSalesDetailss;
    }

    @Transient
    @JsonIgnoreProperties(value = {"mcps","implementEmployees", "locations","statuss"})
    List<MCPDetails> mcpDetailss;

    @JsonGetter
    public List<MCPDetails> getMcpDetailss() {
        return mcpDetailss;
    }

    @JsonSetter
    public void setMcpDetailss(List<MCPDetails> mcpDetailss) {
        this.mcpDetailss = mcpDetailss;
    }

    public MCP() {
    }

    public MCP(Integer id, Integer type, String name, Date beginDate, Integer implementEmployeeId, Integer statusId, Date finishTime, Integer isActive, Date createdAt, Integer createdUser, Date updatedAt, Integer updatedUser, Date deletedAt, Integer deletedUser) {
        this.id = id;
        this.type = type;
        this.name = name;
        this.beginDate = beginDate;
        this.implementEmployeeId = implementEmployeeId;
        this.statusId = statusId;
        this.finishTime = finishTime;
        this.isActive = isActive;
        this.createdAt = createdAt;
        this.createdUser = createdUser;
        this.updatedAt = updatedAt;
        this.updatedUser = updatedUser;
        this.deletedAt = deletedAt;
        this.deletedUser = deletedUser;
    }

    public MCP(Integer id, Integer type, String name, Date beginDate, Integer implementEmployeeId, Integer statusId, Date finishTime, Integer isActive, String note, Date createdAt, Integer createdUser, Date updatedAt, Integer updatedUser, Date deletedAt, Integer deletedUser) {
        this.id = id;
        this.type = type;
        this.name = name;
        this.beginDate = beginDate;
        this.implementEmployeeId = implementEmployeeId;
        this.statusId = statusId;
        this.finishTime = finishTime;
        this.isActive = isActive;
        this.note = note;
        this.createdAt = createdAt;
        this.createdUser = createdUser;
        this.updatedAt = updatedAt;
        this.updatedUser = updatedUser;
        this.deletedAt = deletedAt;
        this.deletedUser = deletedUser;
    }

    public Integer getId() {
        return this.id;
    }

    public void setId(Integer id) {
        this.id = id;
    }

    public Integer getType() {
        return this.type;
    }

    public void setType(Integer type) {
        this.type = type;
    }

    public String getName() {
        return this.name;
    }

    public void setName(String name) {
        this.name = name;
    }

    public Date getBeginDate() {
        return this.beginDate;
    }

    public void setBeginDate(Date beginDate) {
        this.beginDate = beginDate;
    }

    @JsonInclude(JsonInclude.Include.NON_NULL)
    public Integer getImplementEmployeeId() {
        return this.implementEmployeeId;
    }

    @JsonSetter
    public void setImplementEmployeeId(Integer implementEmployeeId) {
        this.implementEmployeeId = implementEmployeeId;
        if (implementEmployeeId != null) {
            User u = new User();
            u.setId(this.getImplementEmployeeId());
            this.setImplementEmployees(u);
        }
    }

    @JsonInclude(JsonInclude.Include.NON_NULL)
    public Integer getStatusId() {
        return this.statusId;
    }

    @JsonSetter
    public void setStatusId(Integer statusId) {
        this.statusId = statusId;
        if (statusId != null) {
            Status s = new Status();
            s.setId(this.getStatusId());
            this.statuss = s;
        }
    }

    public Date getFinishTime() {
        return this.finishTime;
    }

    public void setFinishTime(Date finishTime) {
        this.finishTime = finishTime;
    }

    public Integer getIsActive() {
        return this.isActive;
    }

    public void setIsActive(Integer isActive) {
        this.isActive = isActive;
    }

    public String getNote() {
        return this.note;
    }

    public void setNote(String note) {
        this.note = note;
    }

    public Date getCreatedAt() {
        return this.createdAt;
    }

    public void setCreatedAt(Date createdAt) {
        this.createdAt = createdAt;
    }

    
    public Integer getCreatedUser() {
        return this.createdUser;
    }

    @JsonSetter
    public void setCreatedUser(Integer createdUser) {
        this.createdUser = createdUser;
    }

    public Date getUpdatedAt() {
        return this.updatedAt;
    }

    public void setUpdatedAt(Date updatedAt) {
        this.updatedAt = updatedAt;
    }

    @JsonIgnore
    public Integer getUpdatedUser() {
        return this.updatedUser;
    }

    @JsonSetter
    public void setUpdatedUser(Integer updatedUser) {
        this.updatedUser = updatedUser;
    }

    public Date getDeletedAt() {
        return this.deletedAt;
    }

    public void setDeletedAt(Date deletedAt) {
        this.deletedAt = deletedAt;
    }

    @JsonIgnore
    public Integer getDeletedUser() {
        return this.deletedUser;
    }

    @JsonSetter
    public void setDeletedUser(Integer deletedUser) {
        this.deletedUser = deletedUser;
    }

    /**
     * @return the locationid
     */
    public Long getLocationid() {
        return locationid;
    }

    /**
     * @param locationid the locationid to set
     */
    public void setLocationid(Long locationid) {
        this.locationid = locationid;
    }
 
    /**
     * DuanND
     */
    @Transient
    private String nameAdmin;

	public String getNameAdmin() {
		return nameAdmin;
	}

	public void setNameAdmin(String nameAdmin) {
		this.nameAdmin = nameAdmin;
	}
    @Transient
    private String nameUpdatedUser;

	public String getNameUpdatedUser() {
		return nameUpdatedUser;
	}

	public void setNameUpdatedUser(String nameUpdatedUser) {
		this.nameUpdatedUser = nameUpdatedUser;
	}
    @Transient Integer newPOSComplete;

	public Integer getNewPOSComplete() {
		return newPOSComplete;
	}

	public void setNewPOSComplete(Integer newPOSComplete) {
		this.newPOSComplete = newPOSComplete;
	}
    //Tổng điểm bán hàng cần thực hiện
	@Transient
	private Integer totalPOS;
	@Transient
	private Integer totalPOSComplete;

	public Integer getTotalPOS() {
		return totalPOS;
	}

	public void setTotalPOS(Integer totalPOS) {
		this.totalPOS = totalPOS;
	}

	public Integer getTotalPOSComplete() {
		return totalPOSComplete;
	}

	public void setTotalPOSComplete(Integer totalPOSComplete) {
		this.totalPOSComplete = totalPOSComplete;
	}
	@Transient
	private Long dsTargetPerDate;
	@Transient
	private Long dsTargetFocusPerDate;
	@Transient
	private Long dsPerMonth;
	@Transient
	private Long dsFocusPerMonth;
	@Transient
	private Long dsPerDate;

    public Long getDsTargetPerDate() {
        return dsTargetPerDate;
    }

    public void setDsTargetPerDate(Long dsTargetPerDate) {
        this.dsTargetPerDate = dsTargetPerDate;
    }

    public Long getDsTargetFocusPerDate() {
        return dsTargetFocusPerDate;
    }

    public void setDsTargetFocusPerDate(Long dsTargetFocusPerDate) {
        this.dsTargetFocusPerDate = dsTargetFocusPerDate;
    }

    public Long getDsPerMonth() {
        return dsPerMonth;
    }

    public void setDsPerMonth(Long dsPerMonth) {
        this.dsPerMonth = dsPerMonth;
    }

    public Long getDsFocusPerMonth() {
        return dsFocusPerMonth;
    }

    public void setDsFocusPerMonth(Long dsFocusPerMonth) {
        this.dsFocusPerMonth = dsFocusPerMonth;
    }

    public Long getDsPerDate() {
        return dsPerDate;
    }

    public void setDsPerDate(Long dsPerDate) {
        this.dsPerDate = dsPerDate;
    }

    @Transient
	private Long dsFocusPerDate;
	
	public Long getDsFocusPerDate() {
		return dsFocusPerDate;
	}

	public void setDsFocusPerDate(Long dsFocusPerDate) {
		this.dsFocusPerDate = dsFocusPerDate;
	}

	@Transient
	private Integer isComplete;

	public Integer getIsComplete() {
		return isComplete;
	}

	public void setIsComplete(Integer isComplete) {
		this.isComplete = isComplete;
	}
	@Transient
	private Integer mcpId;

	public Integer getMcpId() {
		return mcpId;
	}

	public void setMcpId(Integer mcpId) {
		this.mcpId = mcpId;
	}
	
	
}
