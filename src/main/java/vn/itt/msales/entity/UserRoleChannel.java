package vn.itt.msales.entity;

// Generated Jun 11, 2015 10:37:14 AM by Hibernate Tools 4.3.1
import java.util.Date;

import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.GeneratedValue;
import javax.persistence.FetchType;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;
import javax.persistence.Transient;
import javax.validation.constraints.NotNull;

import org.springframework.format.annotation.NumberFormat;

import vn.itt.msales.common.json.validator.MsalesValidator;

import com.fasterxml.jackson.annotation.JsonFilter;
import com.fasterxml.jackson.annotation.JsonFormat;
import com.fasterxml.jackson.annotation.JsonIgnore;
import com.fasterxml.jackson.annotation.JsonIgnoreProperties;
import com.fasterxml.jackson.annotation.JsonSetter;
import com.fasterxml.jackson.databind.annotation.JsonSerialize;

import javax.persistence.GenerationType;
import javax.persistence.SequenceGenerator;

/**
 * UserRoleChannel generated by hbm2java
 */
@Entity
@Table(name = "`user_role_channel`")
@JsonFilter("JSONFILTER")
@JsonSerialize(include=JsonSerialize.Inclusion.NON_NULL)
public class UserRoleChannel implements java.io.Serializable {

    private static final long serialVersionUID = 624517764546242546L;

    @Id
    @GeneratedValue(strategy = GenerationType.AUTO, generator = "SEQ_ID")
    @SequenceGenerator(name = "SEQ_ID", sequenceName = "SEQ_USERROLECHANNEL_ID")
    @Column(name = "ID", unique = true, nullable = false)
    private Integer id;

    @Transient
    @NumberFormat(style = NumberFormat.Style.NUMBER)
    private Integer userRoleId;

    @Transient
    @NumberFormat(style = NumberFormat.Style.NUMBER)
    private Integer channelId;

    @Transient
    @NumberFormat(style = NumberFormat.Style.NUMBER)
    private Integer userId;

    @ManyToOne(fetch = FetchType.EAGER)
    @JoinColumn(name = "USER_ROLE_ID", nullable = false)
    @NotNull(message = MsalesValidator.USER_ROLE_CHANNEL_USER_ROLE_ID_NULL)
    private UserRole userRoles;

    // Getter and Setter UserRole
    @JsonIgnoreProperties(value = {"note", "parents"})
    public UserRole getUserRoles() {
        return userRoles;
    }

    public void setUserRoles(UserRole userRole) {
        this.userRoles = userRole;
    }

    @ManyToOne(fetch = FetchType.EAGER)
    @JoinColumn(name = "CHANNEL_ID", nullable = false)
    @NotNull(message = MsalesValidator.USER_ROLE_CHANNEL_CHANNEL_ID_NULL)
    private Channel channels;

    // Getter and Setter channel
    @JsonIgnoreProperties(value = {"locations", "statuss", "parents",
        "companys", "statusType", "isSalePoint",
        "statusId", "address", "contactPersonName", "tel", "fax", "email",
        "lat", "lng", "note"})
    public Channel getChannels() {
        return channels;
    }

    public void setChannels(Channel channel) {
        this.channels = channel;
    }

    @ManyToOne(fetch = FetchType.EAGER)
    @JoinColumn(name = "USER_ID", nullable = false)
    @NotNull(message = MsalesValidator.USER_ROLE_CHANNEL_USER_ID_NULL)
    private User users;

    // Getter and Setter user
    @JsonIgnoreProperties(value = {"userCode", "password", "locationId",
        "monitoringUsers", "employerUserId", "isActive", "activeCode",
        "employerType", "useEvoucher", "statusId", "username", "birthday",
        "locations", "sex", "email", "yahooId", "skypeId", "isdn", "tel",
        "address", "note", "ipLastLogin", "updatedAt", "updatedUser",
        "employerUsers", "createdUser", "companys"})
    public User getUsers() {
        return users;
    }

    public void setUsers(User user) {
        this.users = user;
    }

    @JsonFormat(shape = JsonFormat.Shape.STRING, pattern = "dd/MM/yyyy H:mm:ss", timezone = "GMT+7")
    @Temporal(TemporalType.TIMESTAMP)
    @Column(name = "BEGIN_AT", nullable = true, length = 19)
    private Date beginAt;

    @JsonFormat(shape = JsonFormat.Shape.STRING, pattern = "dd/MM/yyyy H:mm:ss", timezone = "GMT+7")
    @Temporal(TemporalType.TIMESTAMP)
    @Column(name = "END_AT", nullable = true, length = 19)
    private Date endAt;

    @Temporal(TemporalType.TIMESTAMP)
    @Column(name = "CREATED_AT", nullable = false, length = 19)
    @JsonFormat(shape = JsonFormat.Shape.STRING, pattern = MsalesValidator.DATE_FORMAT_LONG, timezone = "GMT+7")
    private Date createdAt;

    @NumberFormat(style = NumberFormat.Style.NUMBER)
    @Column(name = "CREATED_USER", nullable = false)
    @NotNull(message = MsalesValidator.CREATED_USER_NULL)
    private Integer createdUser;

    @Temporal(TemporalType.TIMESTAMP)
    @Column(name = "UPDATED_AT", length = 19)
    @JsonIgnore
    @JsonFormat(shape = JsonFormat.Shape.STRING, pattern = MsalesValidator.DATE_FORMAT_LONG, timezone = "GMT+7")
    private Date updatedAt;

    @Column(name = "UPDATED_USER", nullable = false)
    @NotNull(message = MsalesValidator.UPDATED_USER_NULL)
    private Integer updatedUser;

    @Temporal(TemporalType.TIMESTAMP)
    @Column(name = "DELETED_AT", length = 19)
    @JsonIgnore
    @JsonFormat(shape = JsonFormat.Shape.STRING, pattern = MsalesValidator.DATE_FORMAT_LONG, timezone = "GMT+7")
    private Date deletedAt;

    @Column(name = "DELETED_USER", nullable = false)
    @NotNull(message = MsalesValidator.DELETED_USER_NULL)
    private Integer deletedUser;

    public UserRoleChannel() {
    }

    public UserRoleChannel(Integer userRoleId, Integer channelId,
            Integer userId, Date beginAt, Date endAt, Date createdAt,
            Integer createdUser, Date updatedAt, Integer updatedUser,
            Date deletedAt, Integer deletedUser) {
        this.userRoleId = userRoleId;
        this.channelId = channelId;
        this.userId = userId;
        this.beginAt = beginAt;
        this.endAt = endAt;
        this.createdAt = createdAt;
        this.createdUser = createdUser;
        this.updatedAt = updatedAt;
        this.updatedUser = updatedUser;
        this.deletedAt = deletedAt;
        this.deletedUser = deletedUser;
    }

    public Integer getId() {
        return this.id;
    }

    public void setId(Integer id) {
        this.id = id;
    }

    // @Column(name="USER_ROLE_ID", nullable=false)
    @JsonIgnore
    public Integer getUserRoleId() {
        return this.userRoleId;
    }

    @JsonSetter
    public void setUserRoleId(Integer userRoleId) {
        this.userRoleId = userRoleId;
        UserRole userRole = new UserRole();
        userRole.setId(this.getUserRoleId());
        this.setUserRoles(userRole);
    }

    // @Column(name="CHANNEL_ID", nullable=false)
    @JsonIgnore
    public Integer getChannelId() {
        return this.channelId;
    }

    @JsonSetter
    public void setChannelId(Integer channelId) {
        this.channelId = channelId;
        Channel channel = new Channel();
        channel.setId(this.getChannelId());
        this.setChannels(channel);
    }

    // @Column(name="USER_ID", nullable=false)
    @JsonIgnore
    public Integer getUserId() {
        return this.userId;
    }

    @JsonSetter
    public void setUserId(Integer userId) {
        this.userId = userId;
        User user = new User();
        user.setId(this.getUserId());
        this.setUsers(user);

    }

    public Date getBeginAt() {
        return this.beginAt;
    }

    @JsonSetter
    public void setBeginAt(Date beginAt) {
        this.beginAt = beginAt;
    }

    public Date getEndAt() {
        return this.endAt;
    }

    @JsonSetter
    public void setEndAt(Date endAt) {
        this.endAt = endAt;
    }

    @JsonIgnore
    public Date getCreatedAt() {
        return this.createdAt;
    }

    public void setCreatedAt(Date createdAt) {
        this.createdAt = createdAt;
    }

    @JsonIgnore
    public Integer getCreatedUser() {
        return this.createdUser;
    }

    @JsonSetter
    public void setCreatedUser(Integer createdUser) {
        this.createdUser = createdUser;
    }

    @JsonIgnore
    public Date getUpdatedAt() {
        return this.updatedAt;
    }

    public void setUpdatedAt(Date updatedAt) {
        this.updatedAt = updatedAt;
    }

    @JsonIgnore
    public Integer getUpdatedUser() {
        return this.updatedUser;
    }

    @JsonSetter
    public void setUpdatedUser(Integer updatedUser) {
        this.updatedUser = updatedUser;
    }

    @JsonIgnore
    public Date getDeletedAt() {
        return this.deletedAt;
    }

    public void setDeletedAt(Date deletedAt) {
        this.deletedAt = deletedAt;
    }

    @JsonIgnore
    public Integer getDeletedUser() {
        return this.deletedUser;
    }

    @JsonSetter
    public void setDeletedUser(Integer deletedUser) {
        this.deletedUser = deletedUser;
    }

}
