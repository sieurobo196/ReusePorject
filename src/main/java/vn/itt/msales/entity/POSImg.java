package vn.itt.msales.entity;
// Generated Jun 11, 2015 10:37:14 AM by Hibernate Tools 4.3.1

import com.fasterxml.jackson.annotation.JsonIgnore;
import com.fasterxml.jackson.annotation.JsonIgnoreProperties;
import com.fasterxml.jackson.annotation.JsonSetter;
import java.util.Date;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import javax.persistence.GenerationType;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.SequenceGenerator;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;
import javax.persistence.Transient;
import javax.validation.constraints.NotNull;
import org.hibernate.validator.constraints.NotEmpty;
import org.springframework.format.annotation.NumberFormat;
import vn.itt.msales.common.json.validator.MsalesValidator;

/**
 * POSImg generated by hbm2java
 */
@Entity
@Table(name = "`pos_img`"
)
public class POSImg implements java.io.Serializable {

    private static final long serialVersionUID = -413975304236343430L;

    @Id
    @GeneratedValue(strategy=GenerationType.AUTO ,generator = "SEQ_ID")
    @SequenceGenerator(name = "SEQ_ID",sequenceName = "SEQ_POSIMG_ID")
    @Column(name = "ID", unique = true, nullable = false)
    private Integer id;
    
    @Transient
    private Integer posId;

    //more info
    @NotNull(message = MsalesValidator.POS_IMG_POS_ID_NULL)
    @ManyToOne(fetch = FetchType.EAGER)
    @JoinColumn(name = "POS_ID", nullable = false)
    @JsonIgnoreProperties(value = {"statuss", "locations", "channels", "address", "hierarchy", "ownerName", "street",
        "birthday", "owerCode", "owerCodeDate", "owerCodeLocation", "tel", "mobile", "otherTel", "fax", "email",
        "website", "gpkd", "gpkdDate", "gpkdLocation", "note", "lat", "lng", "isActive", "beginAt", "endAt", "createdAt","createdUser"})
    private POS poss;

    public POS getPoss() {
        return poss;
    }

    public void setPoss(POS poss) {
        this.poss = poss;
    }

    @NotNull(message = MsalesValidator.POS_IMG_PATH_NULL)
    @NotEmpty(message = MsalesValidator.POS_IMG_PATH_EMPTY)
    @Column(name = "`PATH`", nullable = false, length = 256)
    private String path;

    @NotNull(message = MsalesValidator.POS_IMG_IS_FOCUS_NULL)
    @NumberFormat(style = NumberFormat.Style.NUMBER)
    @Column(name = "IS_FOCUS", nullable = false)
    private Integer isFocus;

    @Column(name = "NOTE", length = 256)
    private String note;

    @Temporal(TemporalType.TIMESTAMP)
    @Column(name = "CREATED_AT", nullable = false, length = 19)
    @JsonIgnore
    private Date createdAt;

    @Column(name = "CREATED_USER", nullable = false)
    @NotNull(message = MsalesValidator.CREATED_USER_NULL)
    private Integer createdUser;
    
    @Temporal(TemporalType.TIMESTAMP)
    @Column(name = "UPDATED_AT", length = 19)
    @JsonIgnore
    private Date updatedAt;

    @Column(name = "UPDATED_USER", nullable = false)
    @NotNull(message = MsalesValidator.UPDATED_USER_NULL)
    private Integer updatedUser;

    @Temporal(TemporalType.TIMESTAMP)
    @Column(name = "DELETED_AT", length = 19)
    @JsonIgnore
    private Date deletedAt;

    @Column(name = "DELETED_USER", nullable = false)
    @NotNull(message = MsalesValidator.DELETED_USER_NULL)
    private Integer deletedUser;
    
    public POSImg() {
    }

    public POSImg(Integer posId, String path, Integer isFocus, Date createdAt, Integer createdUser, Date updatedAt, Integer updatedUser, Date deletedAt, Integer deletedUser) {
        this.posId = posId;
        this.path = path;
        this.isFocus = isFocus;
        this.createdAt = createdAt;
        this.createdUser = createdUser;
        this.updatedAt = updatedAt;
        this.updatedUser = updatedUser;
        this.deletedAt = deletedAt;
        this.deletedUser = deletedUser;
    }

    public POSImg(Integer posId, String path, Integer isFocus, String note, Date createdAt, Integer createdUser, Date updatedAt, Integer updatedUser, Date deletedAt, Integer deletedUser) {
        this.posId = posId;
        this.path = path;
        this.isFocus = isFocus;
        this.note = note;
        this.createdAt = createdAt;
        this.createdUser = createdUser;
        this.updatedAt = updatedAt;
        this.updatedUser = updatedUser;
        this.deletedAt = deletedAt;
        this.deletedUser = deletedUser;
    }

    public Integer getId() {
        return this.id;
    }

    public void setId(Integer id) {
        this.id = id;
    }

    @JsonIgnore
    public Integer getPosId() {
        return this.posId;
    }

    @JsonSetter
    public void setPosId(Integer posId) {
        this.posId = posId;
        if (posId != null) {
            POS pos=  new POS();
            pos.setId(this.getPosId());
            this.poss = pos;
        }

    }

    public String getPath() {
        return this.path;
    }

    public void setPath(String path) {
        this.path = path;
    }

    public Integer getIsFocus() {
        return this.isFocus;
    }

    public void setIsFocus(int isFocus) {
        this.isFocus = isFocus;
    }

    public String getNote() {
        return this.note;
    }

    public void setNote(String note) {
        this.note = note;
    }

    public Date getCreatedAt() {
        return this.createdAt;
    }

    public void setCreatedAt(Date createdAt) {
        this.createdAt = createdAt;
    }

    @JsonIgnore
    public Integer getCreatedUser() {
        return this.createdUser;
    }

    @JsonSetter
    public void setCreatedUser(int createdUser) {
        this.createdUser = createdUser;
    }

    public Date getUpdatedAt() {
        return this.updatedAt;
    }

    public void setUpdatedAt(Date updatedAt) {
        this.updatedAt = updatedAt;
    }

    @JsonIgnore
    public Integer getUpdatedUser() {
        return this.updatedUser;
    }

    @JsonSetter
    public void setUpdatedUser(int updatedUser) {
        this.updatedUser = updatedUser;
    }

    public Date getDeletedAt() {
        return this.deletedAt;
    }

    public void setDeletedAt(Date deletedAt) {
        this.deletedAt = deletedAt;
    }

    @JsonIgnore
    public Integer getDeletedUser() {
        return this.deletedUser;
    }

    @JsonSetter
    public void setDeletedUser(int deletedUser) {
        this.deletedUser = deletedUser;
    }

}
