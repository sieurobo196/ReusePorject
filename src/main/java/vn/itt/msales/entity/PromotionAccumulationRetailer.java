package vn.itt.msales.entity;
// Generated Oct 9, 2015 3:36:35 PM by Hibernate Tools 4.3.1

import com.fasterxml.jackson.annotation.JsonIgnore;
import com.fasterxml.jackson.annotation.JsonIgnoreProperties;
import com.fasterxml.jackson.annotation.JsonSetter;
import java.util.Date;
import java.util.List;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import static javax.persistence.GenerationType.IDENTITY;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;
import javax.persistence.Transient;

/**
 * PromotionAccumulationRetailer generated by hbm2java
 */
@Entity
@Table(name = "PROMOTION_ACCUMULATION_RETAILER"
)
public class PromotionAccumulationRetailer implements java.io.Serializable, Comparable<Object> {

    private static final long serialVersionUID = 3883667466251781273L;

    @Id
    @GeneratedValue(strategy = IDENTITY)
    @Column(name = "ID", unique = true, nullable = false)
    private Integer id;
    @Transient
    private Integer promotionId;
    @Transient
    private Integer retailerId;
    @Transient
    private Integer approveId;
    @Transient
    private Integer statusId;
    @Column(name = "ORDER_NUMBER")
    private Integer orderNumber;
    @Column(name = "QUANTITY", nullable = false)
    private Integer quantity;
    @Column(name = "AMOUNT", nullable = false)
    private Integer amount;
    @Column(name = "AWARD_QUANTITY", nullable = false)
    private Integer awardQuantity;
    @Column(name = "AWARD_AMOUNT", nullable = false)
    private Integer awardAmount;
    @Column(name = "AWARD_NAME", nullable = false, length = 256)
    private String awardName;
    @Column(name = "IS_OTHER", nullable = false)
    private Integer isOther;

    @Column(name = "AWARD_GOODS_ID", nullable = false)
    private Integer awardGoodsId;
    @Column(name = "NOTE", length = 256)
    private String note;

    @Transient
    private Integer salesmanId;
    @ManyToOne(fetch = FetchType.EAGER)
    @JoinColumn(name = "SALESMAN_ID")
    private User salesmans;

    public User getSalesmans() {
        return salesmans;
    }

    public void setSalesmans(User salesmans) {
        this.salesmans = salesmans;
    }

    @Temporal(TemporalType.TIMESTAMP)
    @Column(name = "CREATED_AT", nullable = false, length = 19)
    private Date createdAt;
    @Column(name = "CREATED_USER", nullable = false)
    private Integer createdUser;
    @Temporal(TemporalType.TIMESTAMP)
    @Column(name = "UPDATED_AT", length = 19)
    private Date updatedAt;
    @Column(name = "UPDATED_USER", nullable = false)
    private Integer updatedUser;
    @Temporal(TemporalType.TIMESTAMP)
    @Column(name = "DELETED_AT", length = 19)
    private Date deletedAt;
    @Column(name = "DELETED_USER", nullable = false)
    private Integer deletedUser;

    @ManyToOne(fetch = FetchType.EAGER)
    @JoinColumn(name = "PROMOTION_ID", nullable = false)
    private Promotion promotions;

    public Promotion getPromotions() {
        return promotions;
    }

    public void setPromotions(Promotion promotions) {
        this.promotions = promotions;
    }

    @ManyToOne(fetch = FetchType.EAGER)
    @JoinColumn(name = "RETAILER_ID", nullable = false)
    private POS retailers;

    public POS getRetailers() {
        return retailers;
    }

    public void setRetailers(POS retailers) {
        this.retailers = retailers;
    }
    @ManyToOne(fetch = FetchType.EAGER)
    @JoinColumn(name = "APPROVE_ID")
    private User approves;

    public User getApproves() {
        return approves;
    }

    public void setApproves(User approves) {
        this.approves = approves;
    }
    @ManyToOne(fetch = FetchType.EAGER)
    @JoinColumn(name = "STATUS_ID", nullable = false)
    private Status statuss;

    public Status getStatuss() {
        return statuss;
    }

    public void setStatuss(Status statuss) {
        this.statuss = statuss;
    }

    @Transient
    private List<Goods> listGoods;

    public List<Goods> getListGoods() {
        return listGoods;
    }

    public void setListGoods(List<Goods> listGoods) {
        this.listGoods = listGoods;
    }
    @Transient
    private List<Channel> channelList;

    public List<Channel> getChannelList() {
        return channelList;
    }

    public void setChannelList(List<Channel> channelList) {
        this.channelList = channelList;
    }

    public PromotionAccumulationRetailer() {
    }

    @Transient
    private Integer accumulationRetailerId;

    public Integer getAccumulationRetailerId() {
        accumulationRetailerId = id;
        return accumulationRetailerId;
    }

    public void setAccumulationRetailerId(Integer accumulationRetailerId) {
        this.accumulationRetailerId = accumulationRetailerId;
    }

    @Transient
    private Integer transRetailerId = null;

    public Integer getTransRetailerId() {
        return transRetailerId;
    }

    public void setTransRetailerId(Integer transRetailerId) {
        this.transRetailerId = transRetailerId;
    }

    @Transient
    @JsonIgnoreProperties(value = {"statuss", "createdAt", "createdUser", "updatedAt", "updatedUser", "deletedAt", "deletedUser"})
    private Object awards;

    public Object getAwards() {
        return awards;
    }

    public void setAwards(Object awards) {
        this.awards = awards;
    }

    @Transient
    boolean approve = false;

    public boolean isApprove() {
        return approve;
    }

    public void setApprove(boolean approve) {
        this.approve = approve;
    }

    public PromotionAccumulationRetailer(Integer promotionId, Integer retailerId, Integer statusId, Integer orderNumber, Integer quantity, Integer amount, Integer awardQuantity, Integer awardAmount, String awardName, Integer isOther, Integer awardGoodsId, Date createdAt, Integer createdUser, Integer updatedUser, Integer deletedUser) {
        this.promotionId = promotionId;
        this.retailerId = retailerId;
        this.statusId = statusId;
        this.orderNumber = orderNumber;
        this.quantity = quantity;
        this.amount = amount;
        this.awardQuantity = awardQuantity;
        this.awardAmount = awardAmount;
        this.awardName = awardName;
        this.isOther = isOther;
        this.awardGoodsId = awardGoodsId;
        this.createdAt = createdAt;
        this.createdUser = createdUser;
        this.updatedUser = updatedUser;
        this.deletedUser = deletedUser;
    }

    public PromotionAccumulationRetailer(Integer promotionId, Integer retailerId, Integer approveId, Integer statusId, Integer orderNumber, Integer quantity, Integer amount, Integer awardQuantity, Integer awardAmount, String awardName, Integer isOther, Integer awardGoodsId, String note, Integer salesmanId, Date createdAt, Integer createdUser, Date updatedAt, Integer updatedUser, Date deletedAt, Integer deletedUser) {
        this.promotionId = promotionId;
        this.retailerId = retailerId;
        this.approveId = approveId;
        this.statusId = statusId;
        this.orderNumber = orderNumber;
        this.quantity = quantity;
        this.amount = amount;
        this.awardQuantity = awardQuantity;
        this.awardAmount = awardAmount;
        this.awardName = awardName;
        this.isOther = isOther;
        this.awardGoodsId = awardGoodsId;
        this.note = note;
        this.salesmanId = salesmanId;
        this.createdAt = createdAt;
        this.createdUser = createdUser;
        this.updatedAt = updatedAt;
        this.updatedUser = updatedUser;
        this.deletedAt = deletedAt;
        this.deletedUser = deletedUser;
    }

    public Integer getId() {
        return this.id;
    }

    public void setId(Integer id) {
        this.id = id;
        if (id != null) {
            accumulationRetailerId = id;
        }
    }

    @JsonIgnore
    public Integer getPromotionId() {
        return this.promotionId;
    }

    @JsonSetter
    public void setPromotionId(Integer promotionId) {
        this.promotionId = promotionId;
        if (promotionId != null) {
            Promotion promotion = new Promotion();
            promotion.setId(this.getPromotionId());
            this.setPromotions(promotion);
        }

    }

    @JsonIgnore
    public Integer getRetailerId() {
        return this.retailerId;
    }

    @JsonSetter
    public void setRetailerId(Integer retailerId) {
        this.retailerId = retailerId;
        if (retailerId != null) {
            POS pos = new POS();
            pos.setId(this.getRetailerId());
            this.setRetailers(pos);
        }
    }

    @JsonIgnore
    public Integer getApproveId() {
        return this.approveId;
    }

    @JsonSetter
    public void setApproveId(Integer approveId) {
        this.approveId = approveId;
        if (approveId != null) {
            User user = new User();
            user.setId(this.getApproveId());
            this.setApproves(user);
        }
    }

    @JsonIgnore
    public Integer getStatusId() {
        return this.statusId;
    }

    @JsonSetter
    public void setStatusId(Integer statusId) {
        this.statusId = statusId;
        if (statusId != null) {
            Status status = new Status();
            status.setId(this.getStatusId());
            this.setStatuss(status);
        }
    }

    public Integer getOrderNumber() {
        return this.orderNumber;
    }

    public void setOrderNumber(Integer orderNumber) {
        this.orderNumber = orderNumber;
    }

    public Integer getQuantity() {
        return this.quantity;
    }

    public void setQuantity(Integer quantity) {
        this.quantity = quantity;
    }

    public Integer getAmount() {
        return this.amount;
    }

    public void setAmount(Integer amount) {
        this.amount = amount;
    }

    public Integer getAwardQuantity() {
        return this.awardQuantity;
    }

    public void setAwardQuantity(Integer awardQuantity) {
        this.awardQuantity = awardQuantity;
    }

    public Integer getAwardAmount() {
        return this.awardAmount;
    }

    public void setAwardAmount(Integer awardAmount) {
        this.awardAmount = awardAmount;
    }

    public String getAwardName() {
        return this.awardName;
    }

    public void setAwardName(String awardName) {
        this.awardName = awardName;
    }

    public Integer getIsOther() {
        return this.isOther;
    }

    public void setIsOther(Integer isOther) {
        this.isOther = isOther;
    }

    public Integer getAwardGoodsId() {
        return this.awardGoodsId;
    }

    public void setAwardGoodsId(Integer awardGoodsId) {
        this.awardGoodsId = awardGoodsId;
    }

    public String getNote() {
        return this.note;
    }

    public void setNote(String note) {
        this.note = note;
    }

    public Integer getSalesmanId() {
        return this.salesmanId;
    }

    public void setSalesmanId(Integer salesmanId) {
        this.salesmanId = salesmanId;
        if (salesmanId != null) {
            User user = new User();
            user.setId(salesmanId);
            this.salesmans = user;
        }
    }

    public Date getCreatedAt() {
        return this.createdAt;
    }

    public void setCreatedAt(Date createdAt) {
        this.createdAt = createdAt;
    }

    public Integer getCreatedUser() {
        return this.createdUser;
    }

    public void setCreatedUser(Integer createdUser) {
        this.createdUser = createdUser;
    }

    public Date getUpdatedAt() {
        return this.updatedAt;
    }

    public void setUpdatedAt(Date updatedAt) {
        this.updatedAt = updatedAt;
    }

    public Integer getUpdatedUser() {
        return this.updatedUser;
    }

    public void setUpdatedUser(Integer updatedUser) {
        this.updatedUser = updatedUser;
    }

    public Date getDeletedAt() {
        return this.deletedAt;
    }

    public void setDeletedAt(Date deletedAt) {
        this.deletedAt = deletedAt;
    }

    public Integer getDeletedUser() {
        return this.deletedUser;
    }

    public void setDeletedUser(Integer deletedUser) {
        this.deletedUser = deletedUser;
    }

    @Override
    public int compareTo(Object object) {
        Date date1 = updatedAt != null ? updatedAt : createdAt;
        Date date2;
        if (object instanceof PromotionAccumulationRetailer) {
            date2 = ((PromotionAccumulationRetailer) object).updatedAt != null ? ((PromotionAccumulationRetailer) object).updatedAt : ((PromotionAccumulationRetailer) object).createdAt;
        } else {
            date2 = ((PromotionTransRetailer) object).getUpdatedAt() != null ? ((PromotionTransRetailer) object).getUpdatedAt() : ((PromotionTransRetailer) object).getCreatedAt();
        }
        return date2.compareTo(date1);
    }

}
