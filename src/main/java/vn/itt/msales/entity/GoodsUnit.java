package vn.itt.msales.entity;

// Generated Jun 11, 2015 10:37:14 AM by Hibernate Tools 4.3.1
import java.util.Date;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.GeneratedValue;
import javax.persistence.FetchType;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;
import javax.persistence.Transient;
import javax.validation.constraints.Min;
import javax.validation.constraints.NotNull;
import javax.validation.constraints.Size;
import org.springframework.format.annotation.NumberFormat;
import vn.itt.msales.common.json.validator.MsalesValidator;
import com.fasterxml.jackson.annotation.JsonFilter;
import com.fasterxml.jackson.annotation.JsonFormat;
import com.fasterxml.jackson.annotation.JsonIgnore;
import com.fasterxml.jackson.annotation.JsonIgnoreProperties;
import com.fasterxml.jackson.annotation.JsonSetter;
import com.fasterxml.jackson.databind.annotation.JsonSerialize;
import javax.persistence.GenerationType;
import javax.persistence.SequenceGenerator;

/**
 * GoodsUnit generated by hbm2java
 */
@Entity
@Table(name = "`goods_unit`")
@JsonFilter("JSONFILTER")
@JsonSerialize(include = JsonSerialize.Inclusion.NON_NULL)
public class GoodsUnit implements java.io.Serializable {

    private static final long serialVersionUID = 5502794332297268424L;

    @Id
    @GeneratedValue(strategy = GenerationType.AUTO, generator = "SEQ_ID")
    @SequenceGenerator(name = "SEQ_ID", sequenceName = "SEQ_GOODSUNIT_ID")
    @Column(name = "ID", unique = true, nullable = false)
    private Integer id;

    @Transient
    @NumberFormat(style = NumberFormat.Style.NUMBER)
    private Integer goodsId;

    @Transient
    @NumberFormat(style = NumberFormat.Style.NUMBER)
    private Integer unitId;
    @Transient
    private Integer childUnitId;
    @ManyToOne(fetch = FetchType.EAGER)
    @JoinColumn(name = "CHILD_UNIT_ID")
    private Unit childUnitIds;

    public Unit getChildUnitIds() {
        return childUnitIds;
    }

    public void setChildUnitIds(Unit childUnitIds) {
        this.childUnitIds = childUnitIds;
    }

    @ManyToOne(fetch = FetchType.EAGER)
    @JoinColumn(name = "GOODS_ID", nullable = false)
    @NotNull(message = MsalesValidator.GOODS_UNIT_GOODS_ID_NULL)
    private Goods goodss;

    @JsonIgnoreProperties(value = {"goodsCategory", "goodsCode", "statusId",
        "isRecover", "price", "factor", "isFocus", "order", "parents",
        "statuss", "goodsCategorys"})
    public Goods getGoodss() {
        return goodss;
    }

    public void setGoodss(Goods goods) {
        this.goodss = goods;
    }

    // tham khao du lieu tu ban unit
    @ManyToOne(fetch = FetchType.EAGER)
    @JoinColumn(name = "UNIT_ID", nullable = false)
    @NotNull(message = MsalesValidator.GOODS_UNIT_UNIT_ID_NULL)
    private Unit units;

    @JsonIgnoreProperties(value = "code")
    public Unit getUnits() {
        return units;
    }

    public void setUnits(Unit unit) {
        this.units = unit;
    }

    @Column(name = "PRICE", nullable = false)
    @NotNull(message = MsalesValidator.PRICE_NULL)
    @NumberFormat(style = NumberFormat.Style.NUMBER)
    @Min(value = 0, message = MsalesValidator.GOODS_PRICE)
    private Integer price;

    @Transient
    private String name;

    public String getName() {
        return name;
    }

    public void setName(String name) {
        this.name = name;
    }

    @Column(name = "QUANTITY", nullable = false)
    @NotNull(message = MsalesValidator.GOODS_UNIT_QUANTITY_NULL)
    @NumberFormat(style = NumberFormat.Style.NUMBER)
    private Integer quantity;

    @Column(name = "IS_ACTIVE", nullable = false)
    @NotNull(message = MsalesValidator.GOODS_UNIT_IS_ACTIVE_NULL)
    @NumberFormat(style = NumberFormat.Style.NUMBER)
    private Integer isActive;

    @Column(name = "NOTE", length = 200)
    @Size(max = 200, message = MsalesValidator.GOOGS_UNIT_NOTE_MAX_LENGTH)
    private String note;

    @Temporal(TemporalType.TIMESTAMP)
    @Column(name = "CREATED_AT", length = 10)
    @JsonFormat(shape = JsonFormat.Shape.STRING, pattern = MsalesValidator.DATE_FORMAT)
    private Date createdAt;

    @NotNull(message = MsalesValidator.CREATED_USER_NULL)
    @Column(name = "CREATED_USER", nullable = false)
    @NumberFormat(style = NumberFormat.Style.NUMBER)
    private Integer createdUser;

    @Temporal(TemporalType.TIMESTAMP)
    @Column(name = "UPDATED_AT", length = 19)
    @JsonIgnore
    private Date updatedAt;

    @Column(name = "UPDATED_USER", nullable = false)
    @NotNull(message = MsalesValidator.UPDATED_USER_NULL)
    private Integer updatedUser;

    @Temporal(TemporalType.TIMESTAMP)
    @Column(name = "DELETED_AT", length = 19)
    @JsonIgnore
    private Date deletedAt;

    @Column(name = "DELETED_USER", nullable = false)
    @NotNull(message = MsalesValidator.DELETED_USER_NULL)
    private Integer deletedUser;

    // tham khao du dieu tu ban goods
    public GoodsUnit() {
    }

    public GoodsUnit(Integer goodsId, Integer unitId, Integer price,
            Integer quantity, Integer isActive, Integer createdUser,
            Integer updatedUser, Integer deletedUser) {
        this.goodsId = goodsId;
        this.unitId = unitId;
        this.price = price;
        this.quantity = quantity;
        this.isActive = isActive;
        this.createdUser = createdUser;
        this.updatedUser = updatedUser;
        this.deletedUser = deletedUser;
    }

    public GoodsUnit(Integer goodsId, Integer unitId, Integer price,
            Integer quantity, Integer isActive, String note, Date createdAt,
            Integer createdUser, Date updatedAt, Integer updatedUser,
            Date deletedAt, Integer deletedUser) {
        this.goodsId = goodsId;
        this.unitId = unitId;
        this.price = price;
        this.quantity = quantity;
        this.isActive = isActive;
        this.note = note;
        this.createdAt = createdAt;
        this.createdUser = createdUser;
        this.updatedAt = updatedAt;
        this.updatedUser = updatedUser;
        this.deletedAt = deletedAt;
        this.deletedUser = deletedUser;
    }

    public Integer getId() {
        return this.id;
    }

    public void setId(Integer id) {
        this.id = id;
    }

    @JsonIgnore
    public Integer getGoodsId() {
        return this.goodsId;
    }

    @JsonSetter
    public void setGoodsId(Integer goodsId) {
        this.goodsId = goodsId;
        Goods goods = new Goods();
        goods.setId(this.getGoodsId());
        this.setGoodss(goods);
    }

    @JsonIgnore
    public Integer getUnitId() {
        return this.unitId;
    }

    @JsonSetter
    public void setUnitId(Integer unitId) {
        this.unitId = unitId;
        Unit unit = new Unit();
        unit.setId(this.getUnitId());
        this.setUnits(unit);
    }

    public Integer getChildUnitId() {
        return this.childUnitId;
    }

    public void setChildUnitId(Integer childUnitId) {
        this.childUnitId = childUnitId;
    }

    public Integer getPrice() {
        return this.price;
    }

    public void setPrice(Integer price) {
        this.price = price;
    }

    public Integer getQuantity() {
        return this.quantity;
    }

    public void setQuantity(Integer quantity) {
        this.quantity = quantity;
    }

    public Integer getIsActive() {
        return this.isActive;
    }

    public void setIsActive(Integer isActive) {
        this.isActive = isActive;
    }

    public String getNote() {
        return this.note;
    }

    public void setNote(String note) {
        this.note = note;
    }

    @JsonIgnore
    public Date getCreatedAt() {
        return this.createdAt;
    }

    @JsonSetter
    public void setCreatedAt(Date createdAt) {
        this.createdAt = createdAt;
    }

    @JsonIgnore
    public Integer getCreatedUser() {
        return this.createdUser;
    }

    @JsonSetter
    public void setCreatedUser(Integer createdUser) {
        this.createdUser = createdUser;
    }

    @JsonIgnore
    public Date getUpdatedAt() {
        return this.updatedAt;
    }

    @JsonSetter
    public void setUpdatedAt(Date updatedAt) {
        this.updatedAt = updatedAt;
    }

    @JsonIgnore
    public Integer getUpdatedUser() {
        return this.updatedUser;
    }

    @JsonSetter
    public void setUpdatedUser(Integer updatedUser) {
        this.updatedUser = updatedUser;
    }

    @JsonIgnore
    public Date getDeletedAt() {
        return this.deletedAt;
    }

    @JsonSetter
    public void setDeletedAt(Date deletedAt) {
        this.deletedAt = deletedAt;
    }

    @JsonIgnore
    public Integer getDeletedUser() {
        return this.deletedUser;
    }

    @JsonSetter
    public void setDeletedUser(Integer deletedUser) {
        this.deletedUser = deletedUser;
    }

}
