package vn.itt.msales.entity;
// Generated Jun 22, 2015 9:37:59 AM by Hibernate Tools 4.3.1

import com.fasterxml.jackson.annotation.JsonFilter;
import com.fasterxml.jackson.annotation.JsonFormat;
import com.fasterxml.jackson.annotation.JsonIgnore;
import com.fasterxml.jackson.annotation.JsonIgnoreProperties;
import com.fasterxml.jackson.annotation.JsonSetter;
import com.fasterxml.jackson.databind.annotation.JsonSerialize;

import java.util.Date;
import java.util.List;

import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import javax.persistence.GenerationType;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.SequenceGenerator;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;
import javax.persistence.Transient;
import javax.validation.constraints.Max;
import javax.validation.constraints.Min;
import javax.validation.constraints.NotNull;

import vn.itt.msales.common.json.validator.MsalesValidator;

/**
 * SalesOrderDetails generated by hbm2java
 */
@Entity
@Table(name = "`sales_order_details`"
)
@JsonFilter("JSONFILTER")
@JsonSerialize(include = JsonSerialize.Inclusion.NON_NULL)
public class SalesOrderDetails implements java.io.Serializable {

    private static final long serialVersionUID = -9094364074713579066L;
    @Id
    @GeneratedValue(strategy = GenerationType.AUTO, generator = "SEQ_ID")
    @SequenceGenerator(name = "SEQ_ID", sequenceName = "SEQ_SALESORDERDETAILS_ID")
    @Column(name = "ID", unique = true, nullable = false)

    private Integer id;

    @Transient
    private Integer orderDetailsId;

    public Integer getOrderDetailsId() {
        return orderDetailsId;
    }

    public void setOrderDetailsId(Integer orderDetailsId) {
        this.orderDetailsId = orderDetailsId;
    }

    @Transient
    private Goods goods;

    @JsonIgnoreProperties(value = {"goodsCode", "statuss", "goodsCategorys", "isRecover", "price", "factor", "isFocus", "order"})
    public Goods getGoods() {
        return goods;
    }

    public void setGoods(Goods goods) {
        this.goods = goods;
    }

    @Transient
    private GoodsUnit unit;

    @JsonIgnoreProperties(value = {"goodss", "units", "price", "quantity", "isActive"})
    public GoodsUnit getUnit() {
        return unit;
    }

    public void setUnit(GoodsUnit unit) {
        this.unit = unit;
    }

    @Transient
    private Integer goodsId;

    @Transient
    private Integer goodsUnitId;

    @Transient
    private Integer orderId;
    
//    @Transient
//    private Integer statusId;
//
//    public Integer getStatusId() {
//        return statusId;
//    }
//
//    public void setStatusId(Integer statusId) {
//        this.statusId = statusId;
//        if(statusId !=null)
//        {
//            Status status = new Status();
//            status.setId(this.statusId);
//            this.statuss= status;
//        }
//    }
//        
//    @ManyToOne(fetch = FetchType.EAGER)
//    @JoinColumn(name = "STATUS_ID")
//    private Status statuss;
//    
//    public Status getStatuss() {
//        return statuss;
//    }
//
//    public void setStatuss(Status statuss) {
//        this.statuss = statuss;
//    }
    
    @Temporal(TemporalType.TIMESTAMP)
    @Column(name = "SALES_TRANS_DATE", nullable = false, length = 19)
    @NotNull(message = "salesTransDate không được null")
    @JsonFormat(shape = JsonFormat.Shape.STRING, pattern = MsalesValidator.DATE_FORMAT_LONG, timezone = MsalesValidator.GMT)
    private Date salesTransDate;
    @Column(name = "QUANTITY", nullable = false)
    @NotNull(message = "quantity không được null")
    private Integer quantity;
    @Column(name = "PRICE", nullable = false)
    // @NotNull(message = "price không được null")
    @Min(value = 0, message = "Giá hàng hóa không thể nhỏ hơn không")
    private Integer price = 0;
    @Column(name = "IS_FOCUS", nullable = false)
    @NotNull(message = "isFocus không được null")
    private Boolean isFocus;
    @Temporal(TemporalType.TIMESTAMP)
    @Column(name = "CREATED_AT", nullable = false, length = 19)
    @JsonIgnore
    private Date createdAt;
    @Column(name = "CREATED_USER", nullable = false)
    @NotNull(message = MsalesValidator.CREATED_USER_NULL)
    private Integer createdUser;

    @Temporal(TemporalType.TIMESTAMP)
    @Column(name = "UPDATED_AT", length = 19)
    @JsonIgnore
    private Date updatedAt;

    @Column(name = "UPDATED_USER", nullable = false)
    @NotNull(message = MsalesValidator.UPDATED_USER_NULL)
    private Integer updatedUser;

    @Temporal(TemporalType.TIMESTAMP)
    @Column(name = "DELETED_AT", length = 19)
    @JsonIgnore
    private Date deletedAt;

    @Column(name = "DELETED_USER", nullable = false)
    @NotNull(message = MsalesValidator.DELETED_USER_NULL)
    private Integer deletedUser;

    @ManyToOne(fetch = FetchType.EAGER)
    @JoinColumn(name = "GOODS_ID", nullable = false)
    @JsonIgnoreProperties(value = {"parents", "goodsCode", "statuss", "isRecover", "price", "factor", "isFocus", "order", "goodsCategorys"})
    private Goods goodss;

    @NotNull(message = "goodsId không được null")
    public Goods getGoodss() {
        return goodss;
    }

    public void setGoodss(Goods goodss) {
        this.goodss = goodss;

    }

    @ManyToOne(fetch = FetchType.EAGER)
    @JoinColumn(name = "GOODS_UNIT_ID", nullable = false)
    @JsonIgnoreProperties(value = {"price", "quantity", "isActive", "note"})
    private GoodsUnit goodsUnits;

    @NotNull(message = "goodsUnitId không được null ")
    public GoodsUnit getGoodsUnits() {
        return goodsUnits;
    }

    public void setGoodsUnits(GoodsUnit goodsUnits) {
        this.goodsUnits = goodsUnits;

    }
    @ManyToOne(fetch = FetchType.EAGER)
    @JoinColumn(name = "ORDER_ID", nullable = false)
    @JsonIgnoreProperties(value = {"salesTransDate", "note", "stocks"})
    private SalesOrder orders;

    @NotNull(message = "orderId không được null")
    public SalesOrder getOrders() {
        return orders;
    }

    public void setOrders(SalesOrder orders) {
        this.orders = orders;

    }

    @Transient
    private List<SalesOrderDetails> salesOrderDetails;

    public List<SalesOrderDetails> getSalesOrderDetails() {
        return salesOrderDetails;
    }

    public void setSalesOrderDetails(List<SalesOrderDetails> salesOrderDetails) {
        this.salesOrderDetails = salesOrderDetails;
    }

    public SalesOrderDetails() {
    }

    public SalesOrderDetails(Integer goodsId, Integer goodsUnitId, Integer orderId, Date salesTransDate, Integer quantity, Integer price, boolean isFocus, Date createdAt, Integer createdUser, Date updatedAt, Integer updatedUser, Date deletedAt, Integer deletedUser) {
        this.goodsId = goodsId;
        this.goodsUnitId = goodsUnitId;
        this.orderId = orderId;
        this.salesTransDate = salesTransDate;
        this.quantity = quantity;
        this.price = price;
        this.isFocus = isFocus;
        this.createdAt = createdAt;
        this.createdUser = createdUser;
        this.updatedAt = updatedAt;
        this.updatedUser = updatedUser;
        this.deletedAt = deletedAt;
        this.deletedUser = deletedUser;
    }

    public Integer getId() {
        return this.id;
    }

    public void setId(Integer id) {
        this.id = id;
    }

    @JsonIgnore
    public Integer getGoodsId() {
        return this.goodsId;
    }

    @JsonSetter
    public void setGoodsId(Integer goodsId) {
        this.goodsId = goodsId;
        if (goodsId != null) {
            Goods g = new Goods();
            g.setId(this.getGoodsId());
            this.goodss = g;
        }
    }

    @JsonIgnore
    public Integer getGoodsUnitId() {
        return this.goodsUnitId;
    }

    @JsonSetter
    public void setGoodsUnitId(Integer goodsUnitId) {
        this.goodsUnitId = goodsUnitId;
        if (goodsUnitId != null) {
            GoodsUnit g = new GoodsUnit();
            g.setId(this.getGoodsUnitId());
            this.goodsUnits = g;
        }
    }

    @JsonIgnore
    public Integer getOrderId() {
        return this.orderId;
    }

    @JsonSetter
    public void setOrderId(Integer orderId) {
        this.orderId = orderId;
        if (orderId != null) {
            SalesOrder s = new SalesOrder();
            s.setId(this.getOrderId());
            this.setOrders(s);
        }
    }

    public Date getSalesTransDate() {
        return this.salesTransDate;
    }

    public void setSalesTransDate(Date salesTransDate) {
        this.salesTransDate = salesTransDate;
    }

    public Integer getQuantity() {
        return this.quantity;
    }

    public void setQuantity(Integer quantity) {
        this.quantity = quantity;
    }

    public Integer getPrice() {
        return this.price;
    }

    public void setPrice(Integer price) {
        this.price = price;
    }

    public boolean getIsFocus() {
        return this.isFocus;
    }

    public void setIsFocus(Boolean isFocus) {
        this.isFocus = isFocus;
    }

    public Date getCreatedAt() {
        return this.createdAt;
    }

    public void setCreatedAt(Date createdAt) {
        this.createdAt = createdAt;
    }

    @JsonIgnore
    public Integer getCreatedUser() {
        return this.createdUser;
    }

    @JsonSetter
    public void setCreatedUser(Integer createdUser) {
        this.createdUser = createdUser;
    }

    public Date getUpdatedAt() {
        return this.updatedAt;
    }

    public void setUpdatedAt(Date updatedAt) {
        this.updatedAt = updatedAt;
    }

    @JsonIgnore
    public Integer getUpdatedUser() {
        return this.updatedUser;
    }

    @JsonSetter
    public void setUpdatedUser(Integer updatedUser) {
        this.updatedUser = updatedUser;
    }

    public Date getDeletedAt() {
        return this.deletedAt;
    }

    public void setDeletedAt(Date deletedAt) {
        this.deletedAt = deletedAt;
    }

    @JsonIgnore
    public Integer getDeletedUser() {
        return this.deletedUser;
    }

    @JsonSetter
    public void setDeletedUser(Integer deletedUser) {
        this.deletedUser = deletedUser;
    }
    @Transient
    private String goodsName;

    public String getGoodsName() {
        return goodsName;
    }

    public void setGoodsName(String goodsName) {
        this.goodsName = goodsName;
    }
    @Transient
    private String unitName;

    public String getUnitName() {
        return unitName;
    }

    public void setUnitName(String unitName) {
        this.unitName = unitName;
    }
    @Transient
    private Long totalPrice;

	public Long getTotalPrice() {
		return totalPrice;
	}

	public void setTotalPrice(Long totalPrice) {
		this.totalPrice = totalPrice;
	}
	@Transient
	private Long price2;

	public Long getPrice2() {
		return price2;
	}

	public void setPrice2(Long price2) {
		this.price2 = price2;
	}
	
	
}
