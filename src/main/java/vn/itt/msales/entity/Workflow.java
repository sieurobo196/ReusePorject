package vn.itt.msales.entity;
// Generated Jun 11, 2015 10:37:14 AM by Hibernate Tools 4.3.1

import com.fasterxml.jackson.annotation.JsonFilter;
import com.fasterxml.jackson.annotation.JsonIgnore;
import com.fasterxml.jackson.annotation.JsonIgnoreProperties;
import com.fasterxml.jackson.annotation.JsonSetter;
import com.fasterxml.jackson.databind.annotation.JsonSerialize;
import java.util.Date;
import java.util.List;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import javax.persistence.GenerationType;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.SequenceGenerator;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;
import javax.persistence.Transient;
import javax.validation.constraints.Min;
import javax.validation.constraints.NotNull;
import org.hibernate.validator.constraints.NotEmpty;
import vn.itt.msales.common.json.validator.MsalesValidator;

/**
 * Workflow generated by hbm2java
 */
@Entity
@Table(name = "`workflow`"
)
@JsonFilter("JSONFILTER")
@JsonSerialize(include = JsonSerialize.Inclusion.NON_NULL)
public class Workflow implements java.io.Serializable {

    private static final long serialVersionUID = 6164978060403039289L;

    @Id
    @GeneratedValue(strategy = GenerationType.AUTO, generator = "SEQ_ID")
    @SequenceGenerator(name = "SEQ_ID", sequenceName = "SEQ_WORKFLOW_ID")
    @Column(name = "ID", unique = true, nullable = false)
    private Integer id;
    @Transient
    private Integer workflowTypeId;
    @Transient
    private Integer companyId;

    @Column(name = "TITLE", nullable = true)
    private String title;

    @Column(name = "IS_IMAGE", nullable = false)
    @NotNull(message = "isImage không được null")
    @Min(value = 0, message = MsalesValidator.ERROR_VALUE_INVALID)
    private Integer isImage;

    @Column(name = "IS_REQUIRED", nullable = false)
    @NotNull(message = "isRequired không được null")
    @Min(value = 0, message = MsalesValidator.ERROR_VALUE_INVALID)
    private Integer isRequired;

    @Column(name = "`ORDER`", nullable = false)
    @NotNull(message = "order không được null")
    private Integer order;

    @Temporal(TemporalType.TIMESTAMP)
    @Column(name = "CREATED_AT", nullable = false, length = 19)
    @JsonIgnore
    private Date createdAt;
    @Column(name = "CREATED_USER", nullable = false)
    @NotNull(message = MsalesValidator.CREATED_USER_NULL)
    private Integer createdUser;

    @Temporal(TemporalType.TIMESTAMP)
    @Column(name = "UPDATED_AT", length = 19)
    @JsonIgnore
    private Date updatedAt;

    @Column(name = "UPDATED_USER", nullable = false)
    @NotNull(message = MsalesValidator.UPDATED_USER_NULL)
    private Integer updatedUser;

    @Temporal(TemporalType.TIMESTAMP)
    @Column(name = "DELETED_AT", length = 19)
    @JsonIgnore
    private Date deletedAt;

    @Column(name = "DELETED_USER", nullable = false)
    @NotNull(message = MsalesValidator.DELETED_USER_NULL)
    private Integer deletedUser;

    @ManyToOne(fetch = FetchType.EAGER)
    @JoinColumn(name = "COMPANY_ID", nullable = false)
    @NotNull(message = "companyId không được null")
    private Company companys;

    @JsonIgnoreProperties(value = {"code", "address", "contactPersonName", "tel", "fax", "email", "lat", "lng", "logoPath", "note", "locations", "statuss", "bgColor",
        "textColor",
        "buttonBgColor",
        "buttonBgColorOver",
        "topBarBGColor"})
    public Company getCompanys() {
        return companys;
    }

    public void setCompanys(Company companys) {
        this.companys = companys;

    }
    @ManyToOne(fetch = FetchType.EAGER)
    @JoinColumn(name = "WORKFLOW_TYPE_ID", nullable = false)
    @NotNull(message = "workflowTypeId không được null")
    private WorkflowType workflowTypes;

    @JsonIgnoreProperties(value = {"type"})
    public WorkflowType getWorkflowTypes() {
        return workflowTypes;
    }

    public void setWorkflowTypes(WorkflowType workflowTypes) {
        this.workflowTypes = workflowTypes;

    }

    @NotEmpty(message = MsalesValidator.WORKFLOW_CODE_NOT_EMPTY)
    @Column(name = "CODE", nullable = false, length = 50)
    private String code;

    public String getCode() {
        return code;
    }

    public void setCode(String code) {
        this.code = code;
    }

    @Transient
    private Integer workflowDetailsId;

    public Integer getWorkflowDetailsId() {
        return workflowDetailsId;
    }

    @JsonSetter
    public void setWorkflowDetailsId(Integer workflowDetailsId) {
        this.workflowDetailsId = workflowDetailsId;
        if (workflowDetailsId != null) {
            WorkflowDetails details = new WorkflowDetails();
            details.setId(workflowDetailsId);
            this.workflowDetails = details;
        }
    }

    @ManyToOne(fetch = FetchType.EAGER)
    @JoinColumn(name = "WORKFLOW_DETAILS_ID")
    private WorkflowDetails workflowDetails;

    public WorkflowDetails getWorkflowDetails() {
        return workflowDetails;
    }

    public void setWorkflowDetails(WorkflowDetails workflowDetails) {
        this.workflowDetails = workflowDetails;
    }

    public Workflow() {
    }

    public Workflow(Integer workflowTypeId, Integer companyId, String title, Integer isImage, Integer isRequired, Integer order, Date createdAt, Integer createdUser, Date updatedAt, Integer updatedUser, Date deletedAt, Integer deletedUser) {
        this.workflowTypeId = workflowTypeId;
        this.companyId = companyId;
        this.title = title;
        this.isImage = isImage;
        this.isRequired = isRequired;
        this.order = order;
        this.createdAt = createdAt;
        this.createdUser = createdUser;
        this.updatedAt = updatedAt;
        this.updatedUser = updatedUser;
        this.deletedAt = deletedAt;
        this.deletedUser = deletedUser;
    }

    public Integer getId() {
        return this.id;
    }

    public void setId(Integer id) {
        this.id = id;
    }

    @JsonIgnore
    public Integer getWorkflowTypeId() {
        return this.workflowTypeId;
    }

    @JsonSetter
    public void setWorkflowTypeId(Integer workflowTypeId) {
        this.workflowTypeId = workflowTypeId;
        if (workflowTypeId != null) {
            WorkflowType wft = new WorkflowType();
            wft.setId(this.getWorkflowTypeId());
            this.workflowTypes = wft;
        }

    }

    @JsonIgnore
    public Integer getCompanyId() {
        return this.companyId;
    }

    @JsonSetter
    public void setCompanyId(Integer companyId) {
        this.companyId = companyId;
        if (companyId != null) {
            Company company = new Company();
            company.setId(this.getCompanyId());
            this.setCompanys(company);
        }

    }

    public String getTitle() {
        return this.title;
    }

    public void setTitle(String title) {
        this.title = title;
    }

    public Integer getIsImage() {
        return this.isImage;
    }

    public void setIsImage(Integer isImage) {
        this.isImage = isImage;
    }

    public Integer getIsRequired() {
        return this.isRequired;
    }

    public void setIsRequired(Integer isRequired) {
        this.isRequired = isRequired;
    }

    public Integer getOrder() {
        return this.order;
    }

    public void setOrder(Integer order) {
        this.order = order;
    }

    public Date getCreatedAt() {
        return this.createdAt;
    }

    public void setCreatedAt(Date createdAt) {
        this.createdAt = createdAt;
    }

    @JsonIgnore
    public Integer getCreatedUser() {
        return this.createdUser;
    }

    @JsonSetter
    public void setCreatedUser(Integer createdUser) {
        this.createdUser = createdUser;
    }

    public Date getUpdatedAt() {
        return this.updatedAt;
    }

    public void setUpdatedAt(Date updatedAt) {
        this.updatedAt = updatedAt;
    }

    @JsonIgnore
    public Integer getUpdatedUser() {
        return this.updatedUser;
    }

    @JsonSetter
    public void setUpdatedUser(Integer updatedUser) {
        this.updatedUser = updatedUser;
    }

    public Date getDeletedAt() {
        return this.deletedAt;
    }

    public void setDeletedAt(Date deletedAt) {
        this.deletedAt = deletedAt;
    }

    @JsonIgnore
    public Integer getDeletedUser() {
        return this.deletedUser;
    }

    @JsonSetter
    public void setDeletedUser(Integer deletedUser) {
        this.deletedUser = deletedUser;
    }

    @Transient
    private List<WorkflowDetails> options;

    @JsonIgnoreProperties(value = {"note", "updatedAt", "updatedUser", "deletedAt", "deletedUser", "workflows", "createdAt", "createdUser", "workflowId"})
    public List<WorkflowDetails> getOptions() {
        return options;
    }

    public void setOptions(List<WorkflowDetails> options) {
        this.options = options;
    }

    @Transient
    private List<WorkflowDetails> option_select;
    @Transient
    private List<WorkflowDetails> option_check;
    @Transient
    private List<WorkflowDetails> option_check_update;

    @JsonIgnoreProperties(value = {"deletedUser", "deletedAt", "updatedUser", "updatedAt", "createdUser", "createdAt", "actionType", "workflows", "note"})
    public List<WorkflowDetails> getOption_select() {
        return option_select;
    }

    public void setOption_select(List<WorkflowDetails> option_select) {
        this.option_select = option_select;
    }

    @JsonIgnoreProperties(value = {"deletedUser", "deletedAt", "updatedUser", "updatedAt", "createdUser", "createdAt", "actionType", "workflows", "note"})
    public List<WorkflowDetails> getOption_check() {
        return option_check;
    }

    public void setOption_check(List<WorkflowDetails> option_check) {
        this.option_check = option_check;
    }

    @JsonIgnoreProperties(value = {"deletedUser", "deletedAt", "updatedUser", "updatedAt", "createdUser", "createdAt", "actionType", "workflows", "note"})
    public List<WorkflowDetails> getOption_check_update() {
        return option_check_update;
    }

    public void setOption_check_update(List<WorkflowDetails> option_check_update) {
        this.option_check_update = option_check_update;
    }

}
