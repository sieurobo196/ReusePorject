package vn.itt.msales.entity;
// Generated Jun 16, 2015 6:34:19 PM by Hibernate Tools 4.3.1

import com.fasterxml.jackson.annotation.JsonFilter;
import com.fasterxml.jackson.annotation.JsonIgnore;
import com.fasterxml.jackson.annotation.JsonIgnoreProperties;
import com.fasterxml.jackson.annotation.JsonSetter;
import com.fasterxml.jackson.databind.annotation.JsonSerialize;

import java.util.ArrayList;
import java.util.Date;
import java.util.List;

import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import javax.persistence.GenerationType;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.SequenceGenerator;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;
import javax.persistence.Transient;
import javax.validation.constraints.NotNull;

import vn.itt.msales.common.json.validator.MsalesValidator;

/**
 * CustomerCareDetails generated by hbm2java
 */
@Entity
@Table(name = "`customer_care_details`")
@JsonSerialize(include = JsonSerialize.Inclusion.NON_NULL)
@JsonFilter("JSONFILTER")
public class CustomerCareDetails implements java.io.Serializable {

    private static final long serialVersionUID = 1781026012945020638L;

    @Id
    @GeneratedValue(strategy = GenerationType.AUTO, generator = "SEQ_ID")
    @SequenceGenerator(name = "SEQ_ID", sequenceName = "SEQ_CUSTOMERCAREDETAILS_ID")
    @Column(name = "ID", unique = true, nullable = false)
    private Integer id;
    @Transient
    private Integer workflowId;
    @Transient
    private Integer posId;
    @Transient
    private Integer customerCareInformationId;
    @Column(name = "CONTENT", length = 1024)
    private String content;
    @Temporal(TemporalType.TIMESTAMP)
    @Column(name = "CREATED_AT", nullable = false, length = 19)
    @JsonIgnore
    private Date createdAt;
    @Column(name = "CREATED_USER", nullable = false)
    @NotNull(message = MsalesValidator.CREATED_USER_NULL)
    private Integer createdUser;

    @Temporal(TemporalType.TIMESTAMP)
    @Column(name = "UPDATED_AT", length = 19)
    @JsonIgnore
    private Date updatedAt;

    @Column(name = "UPDATED_USER", nullable = false)
    @NotNull(message = MsalesValidator.UPDATED_USER_NULL)
    private Integer updatedUser;

    @Temporal(TemporalType.TIMESTAMP)
    @Column(name = "DELETED_AT", length = 19)
    @JsonIgnore
    private Date deletedAt;

    @Column(name = "DELETED_USER", nullable = false)
    @NotNull(message = MsalesValidator.DELETED_USER_NULL)
    private Integer deletedUser;

    @NotNull(message = "workflowId không được null")
    @ManyToOne(fetch = FetchType.EAGER)
    @JoinColumn(name = "WORKFLOW_ID", nullable = false)
    @JsonIgnoreProperties(value = {"isRequired", "isImage", "order", "companys", "workflowTypes"})
    private Workflow workflows;

    public Workflow getWorkflows() {
        return workflows;
    }

    public void setWorkflows(Workflow workflows) {
        this.workflows = workflows;
    }
    @NotNull(message = "posId không được null")
    @ManyToOne(fetch = FetchType.EAGER)
    @JoinColumn(name = "POS_ID", nullable = false)
    @JsonIgnoreProperties(value = {"posCode", ""})
    private POS poss;

    public POS getPoss() {
        return poss;
    }

    public void setPoss(POS poss) {
        this.poss = poss;
    }

    @Transient
    private Integer workflowDetailsId;

    @JsonIgnore
    public Integer getWorkflowDetailsId() {
        return workflowDetailsId;
    }

    @JsonSetter
    public void setWorkflowDetailsId(Integer workflowDetailsId) {
        this.workflowDetailsId = workflowDetailsId;
        if (workflowDetailsId != null) {
            WorkflowDetails workflowDetails = new WorkflowDetails();
            workflowDetails.setId(workflowDetailsId);
            this.workflowDetailss = workflowDetails;
        }
    }

    @ManyToOne(fetch = FetchType.EAGER)
    @JoinColumn(name = "WORKFLOW_DETAILS_ID")
    private WorkflowDetails workflowDetailss;

    public WorkflowDetails getWorkflowDetailss() {
        return workflowDetailss;
    }

    public void setWorkflowDetailss(WorkflowDetails workflowDetailss) {
        this.workflowDetailss = workflowDetailss;
    }

    @ManyToOne(fetch = FetchType.EAGER)
    @JoinColumn(name = "CUSTOMER_CARE_INFORMATION_ID", nullable = false)
    @NotNull(message = "customerCareInformationId không được null")
    @JsonIgnoreProperties(value = {"startCustomerCareAt",
        "isActiveChannel",
        "lat",
        "lng",
        "picture1FilePath",
        "picture2FilePath",
        "picture3FilePath",
        "finishCustomerCareAt",
        "latAfter",
        "lngAfter",
        "implementEmployees",
        "mcps",
        "channels"})
    private CustomerCareInformation customerCareInformations;

    public CustomerCareInformation getCustomerCareInformations() {
        return customerCareInformations;
    }

    public void setCustomerCareInformations(CustomerCareInformation customerCareInformations) {
        this.customerCareInformations = customerCareInformations;

    }
    
    @Transient
    private List<CustomerCareDetails> customerCareDetailsList;

    public List<CustomerCareDetails> getCustomerCareDetailsList() {
        return customerCareDetailsList;
    }

    public void setCustomerCareDetailsList(List<CustomerCareDetails> customerCareDetailsList) {
        this.customerCareDetailsList = customerCareDetailsList;
    }
    

    public CustomerCareDetails() {
    }

    public CustomerCareDetails(Integer id, Integer workflowId, Integer channelId, Integer customerCareInformationId, Date createdAt, Integer createdUser, Date updatedAt, Integer updatedUser, Date deledtedAt, Integer deletedUser) {
        this.id = id;
        this.workflowId = workflowId;
        this.posId = channelId;
        this.customerCareInformationId = customerCareInformationId;
        this.createdAt = createdAt;
        this.createdUser = createdUser;
        this.updatedAt = updatedAt;
        this.updatedUser = updatedUser;
        this.deletedAt = deledtedAt;
        this.deletedUser = deletedUser;
    }

    public CustomerCareDetails(Integer id, Integer workflowId, Integer channelId, Integer customerCareInformationId, String content, Date createdAt, Integer createdUser, Date updatedAt, Integer updatedUser, Date deledtedAt, Integer deletedUser) {
        this.id = id;
        this.workflowId = workflowId;
        this.posId = channelId;
        this.customerCareInformationId = customerCareInformationId;
        this.content = content;
        this.createdAt = createdAt;
        this.createdUser = createdUser;
        this.updatedAt = updatedAt;
        this.updatedUser = updatedUser;
        this.deletedAt = deledtedAt;
        this.deletedUser = deletedUser;
    }

    public Integer getId() {
        return this.id;
    }

    public void setId(Integer id) {
        this.id = id;
    }

    @JsonIgnore
    public Integer getWorkflowId() {
        return this.workflowId;
    }

    @JsonSetter
    public void setWorkflowId(Integer workflowId) {
        this.workflowId = workflowId;
        if (workflowId != null) {
            Workflow w = new Workflow();
            w.setId(this.getWorkflowId());
            this.workflows = w;
        }
    }

    @JsonIgnore
    public Integer getPosId() {
        return this.posId;
    }

    @JsonSetter
    public void setPosId(Integer posId) {
        this.posId = posId;
        if (posId != null) {
            POS pos = new POS();
            pos.setId(this.getPosId());
            this.poss = pos;
        }
    }

    @JsonIgnore

    public Integer getCustomerCareInformationId() {
        return this.customerCareInformationId;
    }

    @JsonSetter
    public void setCustomerCareInformationId(Integer customerCareInformationId) {
        this.customerCareInformationId = customerCareInformationId;
        if (customerCareInformationId != null) {
            CustomerCareInformation c = new CustomerCareInformation();
            c.setId(this.getCustomerCareInformationId());
            this.customerCareInformations = c;
        }
    }

    public String getContent() {
        return this.content;
    }

    public void setContent(String content) {
        this.content = content;
    }

    public Date getCreatedAt() {
        return this.createdAt;
    }

    public void setCreatedAt(Date createdAt) {
        this.createdAt = createdAt;
    }

    @JsonIgnore
    public Integer getCreatedUser() {
        return this.createdUser;
    }

    @JsonSetter
    public void setCreatedUser(Integer createdUser) {
        this.createdUser = createdUser;
    }

    public Date getUpdatedAt() {
        return this.updatedAt;
    }

    public void setUpdatedAt(Date updatedAt) {
        this.updatedAt = updatedAt;
    }

    @JsonIgnore
    public Integer getUpdatedUser() {
        return this.updatedUser;
    }

    @JsonSetter
    public void setUpdatedUser(Integer updatedUser) {
        this.updatedUser = updatedUser;
    }

    public Date getDeletedAt() {
        return this.deletedAt;
    }

    public void setDeletedAt(Date deletedAt) {
        this.deletedAt = deletedAt;
    }

    @JsonIgnore
    public Integer getDeletedUser() {
        return this.deletedUser;
    }

    @JsonSetter
    public void setDeletedUser(Integer deletedUser) {
        this.deletedUser = deletedUser;
    }

    @Transient
    private String title;

    public String getTitle() {
        return title;
    }

    public void setTitle(String title) {
        this.title = title;
    }
    @Transient
    private ArrayList<Integer> option_check;

    public ArrayList<Integer> getOption_check() {
        return option_check;
    }

    public void setOption_check(ArrayList<Integer> option_check) {
        this.option_check = option_check;
    }

    @Transient
    private Integer option_select;

    public Integer getOption_select() {
        return option_select;
    }

    public void setOption_select(Integer option_select) {
        this.option_select = option_select;
    }

    @Transient
    List<WorkflowDetails> option_check_update;

    public List<WorkflowDetails> getOption_check_update() {
        return option_check_update;
    }

    public void setOption_check_update(List<WorkflowDetails> option_check_update) {
        this.option_check_update = option_check_update;
    }

}
