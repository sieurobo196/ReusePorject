package vn.itt.msales.entity;
// Generated Jun 16, 2015 6:34:19 PM by Hibernate Tools 4.3.1

import com.fasterxml.jackson.annotation.JsonFilter;
import com.fasterxml.jackson.annotation.JsonFormat;
import com.fasterxml.jackson.annotation.JsonIgnore;
import com.fasterxml.jackson.annotation.JsonIgnoreProperties;
import com.fasterxml.jackson.annotation.JsonSetter;
import com.fasterxml.jackson.databind.annotation.JsonSerialize;
import java.math.BigDecimal;
import java.util.Date;
import java.util.List;

import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import javax.persistence.GenerationType;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.SequenceGenerator;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;
import javax.persistence.Transient;
import javax.validation.constraints.Max;
import javax.validation.constraints.Min;
import javax.validation.constraints.NotNull;
import vn.itt.msales.common.GPSUtils;
import vn.itt.msales.common.Utilities;

import vn.itt.msales.common.json.validator.MsalesValidator;

/**
 * CustomerCareInformation generated by hbm2java
 */
@Entity
@Table(name = "`customer_care_information`")
@JsonSerialize(include = JsonSerialize.Inclusion.NON_NULL)
@JsonFilter("JSONFILTER")
public class CustomerCareInformation implements java.io.Serializable, Comparable<CustomerCareInformation> {

    private static final long serialVersionUID = 7502616309695889762L;

    @Id
    @GeneratedValue(strategy = GenerationType.AUTO, generator = "SEQ_ID")
    @SequenceGenerator(name = "SEQ_ID", sequenceName = "SEQ_CUSTOMERCAREINFORMATION_ID")
    @Column(name = "ID", unique = true, nullable = false)
    private Integer id;

    @Column(name = "TRANS_CODE", nullable = true, length = 256)
    private String transCode;

    @Temporal(TemporalType.TIMESTAMP)
    @Column(name = "START_CUSTOMER_CARE_AT", nullable = false, length = 19)
    @NotNull(message = "startCustomerCareAt không được null")
    @JsonFormat(shape = JsonFormat.Shape.STRING, pattern = MsalesValidator.DATE_FORMAT_LONG, timezone = "GMT+7")
    private Date startCustomerCareAt;

    @Transient
    private Integer implementEmployeeId;
    @Column(name = "IS_ACTIVE_CHANNEL", nullable = false)
    @NotNull(message = "isActiveChannel không được null")
    @Min(value = 0, message = MsalesValidator.ERROR_VALUE_INVALID)
    @Max(value = 1, message = MsalesValidator.ERROR_VALUE_INVALID)
    private Integer isActiveChannel = 1;
    @Column(name = "LAT", nullable = false, precision = 24, scale = 15)
    @NotNull(message = "lat không được null")
    private BigDecimal lat;
    @Column(name = "LNG", nullable = false, precision = 24, scale = 15)
    @NotNull(message = "lng không được null")
    private BigDecimal lng;
    @Column(name = "PICTURE1_FILE_PATH", length = 256)
    private String picture1FilePath;
    @Column(name = "PICTURE2_FILE_PATH", length = 256)
    private String picture2FilePath;
    @Column(name = "PICTURE3_FILE_PATH", length = 256)
    private String picture3FilePath;
    @Temporal(TemporalType.TIMESTAMP)
    @Column(name = "FINISH_CUSTOMER_CARE_AT", length = 19)
    @JsonFormat(shape = JsonFormat.Shape.STRING, pattern = MsalesValidator.DATE_FORMAT_LONG, timezone = "GMT+7")
    private Date finishCustomerCareAt;
    @Column(name = "LAT_AFTER")
    private Integer latAfter;
    @Column(name = "LNG_AFTER")
    private Integer lngAfter;
    @Temporal(TemporalType.TIMESTAMP)
    @Column(name = "CREATED_AT", nullable = false, length = 19)
    @JsonIgnore
    private Date createdAt;
    @Column(name = "CREATED_USER", nullable = false)
    @NotNull(message = MsalesValidator.CREATED_USER_NULL)
    private Integer createdUser;

    @Temporal(TemporalType.TIMESTAMP)
    @Column(name = "UPDATED_AT", length = 19)
    @JsonIgnore
    private Date updatedAt;

    @Column(name = "UPDATED_USER", nullable = false)
    @NotNull(message = MsalesValidator.UPDATED_USER_NULL)
    private Integer updatedUser;

    @Temporal(TemporalType.TIMESTAMP)
    @Column(name = "DELETED_AT", length = 19)
    @JsonIgnore
    private Date deletedAt;

    @Column(name = "DELETED_USER", nullable = false)
    @NotNull(message = MsalesValidator.DELETED_USER_NULL)
    private Integer deletedUser;

    @ManyToOne(fetch = FetchType.EAGER)
    @JoinColumn(name = "IMPLEMENT_EMPLOYEE_ID", nullable = false)
    @JsonIgnoreProperties(value = {"statuss", "companys", "userCode", "password", "birthday", "sex", "email", "yahooId", "skypeId", "isdn", "tel", "address", "locations", "monitoringUsers", "employerUserId", "note", "isActive", "activeCode", "employerType", "useEvoucher", "employerUsers", "ipLastLogin", "statusId", "createdAt", "createdUser", "updatedAt", "updatedUser", "deletedAt"})
    private User implementEmployees;

    @NotNull(message = "implementEmployeeId không được null")
    public User getImplementEmployees() {
        return implementEmployees;
    }

    public void setImplementEmployees(User implementEmployees) {
        this.implementEmployees = implementEmployees;
    }

    @Transient
    private List<CustomerCareDetails> customerCareDetailss;

    @JsonIgnoreProperties(value = {"customerCareInformations", "channels"})
    public List<CustomerCareDetails> getCustomerCareDetailss() {
        return customerCareDetailss;
    }

    public void setCustomerCareDetailss(List<CustomerCareDetails> customerCareDetailss) {
        this.customerCareDetailss = customerCareDetailss;
    }

//    @ManyToOne(fetch = FetchType.EAGER)
//    @JoinColumn(name = "CHANNEL_ID", nullable = false)
//    @JsonIgnoreProperties(value = {"code", "isSalePoint", "address", "contactPersonName", "tel", "fax", "email", "lat", "lng", "note", "companys", "channelTypes", "statuss", "parents"})
//    private Channel channels;
//
//    @NotNull(message = "channelId không được null")
//    public Channel getChannels() {
//        return channels;
//    }
//
//    public void setChannels(Channel channels) {
//        this.channels = channels;
//        this.channelId = this.channels.getId();
//    }
    @Transient
    private Integer mcpDetailsId;

    @JsonIgnore
    public Integer getMcpDetailsId() {
        return mcpDetailsId;
    }

    @JsonSetter
    public void setMcpDetailsId(Integer mcpDetailsId) {
        this.mcpDetailsId = mcpDetailsId;
        if (mcpDetailsId != null) {
            MCPDetails mcpDetails = new MCPDetails();
            mcpDetails.setId(this.mcpDetailsId);
            this.setMcpDetailss(mcpDetails);
        }
    }

    @Transient
    private Integer posId;

    @JsonIgnore
    public Integer getPosId() {
        return posId;
    }

    @JsonSetter
    public void setPosId(Integer posId) {
        this.posId = posId;
        if (posId != null) {
            POS pos = new POS();
            pos.setId(this.posId);
            this.poss = pos;
        }
    }

    @Transient
    private Integer distance;

    @JsonIgnore
    public Integer getDistance() {
        if (distance == null) {
            distance = GPSUtils.distance(lat.doubleValue(), lng.doubleValue(), poss.getLat().doubleValue(), poss.getLng().doubleValue());
        }
        return distance;
    }

    @Transient
    private String timeDiff;

    @JsonIgnore
    public String getTimeDiff() {
        timeDiff = Utilities.timeDiff(this.startCustomerCareAt, this.finishCustomerCareAt);
        return timeDiff;
    }

    @ManyToOne(fetch = FetchType.EAGER)
    @JoinColumn(name = "MCP_DETAILS_ID", nullable = false)
    private MCPDetails mcpDetailss;

    public MCPDetails getMcpDetailss() {
        return mcpDetailss;
    }

    public void setMcpDetailss(MCPDetails mcpDetailss) {
        this.mcpDetailss = mcpDetailss;
    }

    @ManyToOne(fetch = FetchType.EAGER)
    @JoinColumn(name = "POS_ID", nullable = false)
    @JsonIgnoreProperties(value = {"locations", "channels", "hierarchy", "ownerName", "street",
        "birthday", "owerCode", "owerCodeDate", "owerCodeLocation", "mobile", "otherTel",
        "website", "gpkd", "gpkdDate", "gpkdLocation", "note", "isActive", "beginAt", "endAt", "createdAt", "createdUser"})
    private POS poss;

    public POS getPoss() {
        return poss;
    }

    public void setPoss(POS poss) {
        this.poss = poss;
    }

    public CustomerCareInformation() {
    }

    public CustomerCareInformation(Integer id, Integer posId, Integer mcpDetailsId, Integer scheduleId, Date startCustomerCareAt, Integer emplementEmployeeId, Integer isActiveChannel, BigDecimal lat, BigDecimal lng, Date createdAt, Integer createdUser, Date updatedAt, Integer updatedUser, Date deletedAt, Integer deletedUser) {
        this.id = id;
        this.posId = posId;
        this.mcpDetailsId = mcpDetailsId;
        this.startCustomerCareAt = startCustomerCareAt;
        this.implementEmployeeId = emplementEmployeeId;
        this.isActiveChannel = isActiveChannel;
        this.lat = lat;
        this.lng = lng;
        this.createdAt = createdAt;
        this.createdUser = createdUser;
        this.updatedAt = updatedAt;
        this.updatedUser = updatedUser;
        this.deletedAt = deletedAt;
        this.deletedUser = deletedUser;
    }

    public CustomerCareInformation(Integer id, Integer posId, Integer mcpDetailsId, Integer scheduleId, Date startCustomerCareAt, Integer emplementEmployeeId, Integer isActiveChannel, BigDecimal lat, BigDecimal lng, String picture1FilePath, String picture2FilePath, String picture3FilePath, Date finishCustomerCareAt, Integer latAfter, Integer lngAfter, Date createdAt, Integer createdUser, Date updatedAt, Integer updatedUser, Date deletedAt, Integer deletedUser) {
        this.id = id;
        this.posId = posId;
        this.mcpDetailsId = mcpDetailsId;
        this.startCustomerCareAt = startCustomerCareAt;
        this.implementEmployeeId = emplementEmployeeId;
        this.isActiveChannel = isActiveChannel;
        this.lat = lat;
        this.lng = lng;
        this.picture1FilePath = picture1FilePath;
        this.picture2FilePath = picture2FilePath;
        this.picture3FilePath = picture3FilePath;
        this.finishCustomerCareAt = finishCustomerCareAt;
        this.latAfter = latAfter;
        this.lngAfter = lngAfter;
        this.createdAt = createdAt;
        this.createdUser = createdUser;
        this.updatedAt = updatedAt;
        this.updatedUser = updatedUser;
        this.deletedAt = deletedAt;
        this.deletedUser = deletedUser;
    }

    public Integer getId() {
        return this.id;
    }

    public void setId(Integer id) {
        this.id = id;
    }

    public String getTransCode() {
        return transCode;
    }

    public void setTransCode(String transCode) {
        this.transCode = transCode;
    }

    public Date getStartCustomerCareAt() {
        return this.startCustomerCareAt;
    }

    public void setStartCustomerCareAt(Date startCustomerCareAt) {
        this.startCustomerCareAt = startCustomerCareAt;
    }

    @JsonIgnore
    public Integer getImplementEmployeeId() {
        return this.implementEmployeeId;
    }

    @JsonSetter
    public void setImplementEmployeeId(Integer implementEmployeeId) {
        this.implementEmployeeId = implementEmployeeId;
        if (implementEmployeeId != null) {
            User u = new User();
            u.setId(this.getImplementEmployeeId());
            this.implementEmployees = u;
        }
    }

    public Integer getIsActiveChannel() {
        return this.isActiveChannel;
    }

    public void setIsActiveChannel(Integer isActiveChannel) {
        this.isActiveChannel = isActiveChannel;
    }

    public BigDecimal getLat() {
        return this.lat;
    }

    public void setLat(BigDecimal lat) {
        this.lat = lat;
    }

    public BigDecimal getLng() {
        return this.lng;
    }

    public void setLng(BigDecimal lng) {
        this.lng = lng;
    }

    public String getPicture1FilePath() {
        return this.picture1FilePath;
    }

    public void setPicture1FilePath(String picture1FilePath) {
        this.picture1FilePath = picture1FilePath;
    }

    public String getPicture2FilePath() {
        return this.picture2FilePath;
    }

    public void setPicture2FilePath(String picture2FilePath) {
        this.picture2FilePath = picture2FilePath;
    }

    public String getPicture3FilePath() {
        return this.picture3FilePath;
    }

    public void setPicture3FilePath(String picture3FilePath) {
        this.picture3FilePath = picture3FilePath;
    }

    public Date getFinishCustomerCareAt() {
        return this.finishCustomerCareAt;
    }

    public void setFinishCustomerCareAt(Date finishCustomerCareAt) {
        this.finishCustomerCareAt = finishCustomerCareAt;
    }

    public Integer getLatAfter() {
        return this.latAfter;
    }

    public void setLatAfter(Integer latAfter) {
        this.latAfter = latAfter;
    }

    public Integer getLngAfter() {
        return this.lngAfter;
    }

    public void setLngAfter(Integer lngAfter) {
        this.lngAfter = lngAfter;
    }

    public Date getCreatedAt() {
        return this.createdAt;
    }

    public void setCreatedAt(Date createdAt) {
        this.createdAt = createdAt;
    }

    @JsonIgnore
    public Integer getCreatedUser() {
        return this.createdUser;
    }

    @JsonSetter
    public void setCreatedUser(Integer createdUser) {
        this.createdUser = createdUser;
    }

    public Date getUpdatedAt() {
        return this.updatedAt;
    }

    public void setUpdatedAt(Date updatedAt) {
        this.updatedAt = updatedAt;
    }

    @JsonIgnore
    public Integer getUpdatedUser() {
        return this.updatedUser;
    }

    @JsonSetter
    public void setUpdatedUser(Integer updatedUser) {
        this.updatedUser = updatedUser;
    }

    public Date getDeletedAt() {
        return this.deletedAt;
    }

    public void setDeletedAt(Date deletedAt) {
        this.deletedAt = deletedAt;
    }

    @JsonIgnore
    public Integer getDeletedUser() {
        return this.deletedUser;
    }

    @JsonSetter
    public void setDeletedUser(Integer deletedUser) {
        this.deletedUser = deletedUser;
    }

    @Transient
    private MCP mcps;

    @JsonIgnoreProperties(value = {"salesPerMonth", "salesFocusPerMonth", "newPOS", "beginDate", "type", "finishTime", "isActive", "implementEmployees", "note", "statuss"})
    public MCP getMcps() {
        return mcps;
    }

    public void setMcps(MCP mcps) {
        this.mcps = mcps;
    }
    @Transient
    private Channel channels;

    @JsonIgnoreProperties(value = {"code", "isSalePoint", "contactPersonName", "fax", "note", "email", "companys", "parents", "channelTypes", "statuss"})
    public Channel getChannels() {
        return channels;
    }

    public void setChannels(Channel channels) {
        this.channels = channels;
    }
    @Transient
    private Integer isSold;

    public Integer getIsSold() {
        return isSold;
    }

    public void setIsSold(Integer isSold) {
        this.isSold = isSold;
    }

    @Override
    public int compareTo(CustomerCareInformation object) {
        if (startCustomerCareAt == null) {
            return -1;
        } else {
            return startCustomerCareAt.compareTo(object.startCustomerCareAt);
        }
    }
}
